[{"/home/tapclicks/Desktop/code/kart/kart-ui/src/index.js":"1","/home/tapclicks/Desktop/code/kart/kart-ui/src/serviceWorker.js":"2","/home/tapclicks/Desktop/code/kart/kart-ui/src/context/UserContext.js":"3","/home/tapclicks/Desktop/code/kart/kart-ui/src/context/LayoutContext.js":"4","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/App.js":"5","/home/tapclicks/Desktop/code/kart/kart-ui/src/themes/index.js":"6","/home/tapclicks/Desktop/code/kart/kart-ui/src/themes/default.js":"7","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Layout/Layout.js":"8","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/error/Error.js":"9","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/Login.js":"10","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/regPage.js":"11","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/loginPage.js":"12","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/styles.js":"13","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/login.service.js":"14","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/error/styles.js":"15","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Layout/styles.js":"16","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Admin/adminPage.js":"17","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/tables/Tables.js":"18","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/charts/Charts.js":"19","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/notifications/Notifications.js":"20","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/maps/Maps.js":"21","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/icons/Icons.js":"22","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/Sidebar.js":"23","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/typography/Typography.js":"24","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/Dashboard.js":"25","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Header/Header.js":"26","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/mock.js":"27","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/icons/styles.js":"28","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/notifications/styles.js":"29","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/maps/styles.js":"30","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/charts/components/ApexHeatmap.js":"31","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/charts/components/ApexLineChart.js":"32","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Header/styles.js":"33","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/PageTitle/PageTitle.js":"34","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/styles.js":"35","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/components/Table/Table.js":"36","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/components/Dot.js":"37","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/components/BigStat/BigStat.js":"38","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Widget/Widget.js":"39","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Notification/Notification.js":"40","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/typography/styles.js":"41","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/styles.js":"42","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Wrappers/Wrappers.js":"43","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/UserAvatar/UserAvatar.js":"44","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"45","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/PageTitle/styles.js":"46","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/components/BigStat/styles.js":"47","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Widget/styles.js":"48","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Notification/styles.js":"49","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/UserAvatar/styles.js":"50","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/components/SidebarLink/styles.js":"51","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/services/product.service.js":"52","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Admin/services/admin.service.js":"53","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/product.js":"54","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/viewproduct.js":"55","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/image-maginify.js":"56","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/service/cart.js":"57","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/users/user.js":"58","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/users/services/user.service.js":"59","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/users/styles.js":"60","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/checkout/checkout.js":"61","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/checkout/styles.js":"62","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/checkout/services/order.service.js":"63","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/checkout/orderplaced.js":"64"},{"size":1001,"mtime":1621869809692,"results":"65","hashOfConfig":"66"},{"size":4948,"mtime":1618306617000,"results":"67","hashOfConfig":"66"},{"size":3921,"mtime":1622085302684,"results":"68","hashOfConfig":"66"},{"size":1393,"mtime":1622105991981,"results":"69","hashOfConfig":"66"},{"size":1711,"mtime":1621175292285,"results":"70","hashOfConfig":"66"},{"size":502,"mtime":1618306617000,"results":"71","hashOfConfig":"66"},{"size":2987,"mtime":1621059177850,"results":"72","hashOfConfig":"66"},{"size":5153,"mtime":1622266269983,"results":"73","hashOfConfig":"66"},{"size":1571,"mtime":1618306617000,"results":"74","hashOfConfig":"66"},{"size":2119,"mtime":1622202261334,"results":"75","hashOfConfig":"66"},{"size":4986,"mtime":1622103977695,"results":"76","hashOfConfig":"66"},{"size":3954,"mtime":1622202268878,"results":"77","hashOfConfig":"66"},{"size":3133,"mtime":1618306617000,"results":"78","hashOfConfig":"66"},{"size":385,"mtime":1621172934883,"results":"79","hashOfConfig":"66"},{"size":1334,"mtime":1618306617000,"results":"80","hashOfConfig":"66"},{"size":680,"mtime":1618306617000,"results":"81","hashOfConfig":"66"},{"size":2079,"mtime":1622260789566,"results":"82","hashOfConfig":"66"},{"size":2155,"mtime":1622262697572,"results":"83","hashOfConfig":"66"},{"size":5556,"mtime":1618306617000,"results":"84","hashOfConfig":"66"},{"size":13478,"mtime":1621056437043,"results":"85","hashOfConfig":"66"},{"size":971,"mtime":1618306617000,"results":"86","hashOfConfig":"66"},{"size":377833,"mtime":1618306617000,"results":"87","hashOfConfig":"66"},{"size":4771,"mtime":1622243514350,"results":"88","hashOfConfig":"66"},{"size":4506,"mtime":1618306617000,"results":"89","hashOfConfig":"66"},{"size":6449,"mtime":1622261055012,"results":"90","hashOfConfig":"66"},{"size":15067,"mtime":1622125115618,"results":"91","hashOfConfig":"66"},{"size":4105,"mtime":1621056328395,"results":"92","hashOfConfig":"66"},{"size":780,"mtime":1618306617000,"results":"93","hashOfConfig":"66"},{"size":1858,"mtime":1618306617000,"results":"94","hashOfConfig":"66"},{"size":171,"mtime":1618306617000,"results":"95","hashOfConfig":"66"},{"size":1794,"mtime":1618306617000,"results":"96","hashOfConfig":"66"},{"size":1328,"mtime":1618306617000,"results":"97","hashOfConfig":"66"},{"size":3868,"mtime":1621057221789,"results":"98","hashOfConfig":"66"},{"size":427,"mtime":1618306617000,"results":"99","hashOfConfig":"66"},{"size":3155,"mtime":1622005880009,"results":"100","hashOfConfig":"66"},{"size":1519,"mtime":1622263310670,"results":"101","hashOfConfig":"66"},{"size":862,"mtime":1618306617000,"results":"102","hashOfConfig":"66"},{"size":4039,"mtime":1618306617000,"results":"103","hashOfConfig":"66"},{"size":2485,"mtime":1618306617000,"results":"104","hashOfConfig":"66"},{"size":3296,"mtime":1618306617000,"results":"105","hashOfConfig":"66"},{"size":374,"mtime":1618306617000,"results":"106","hashOfConfig":"66"},{"size":1304,"mtime":1618306617000,"results":"107","hashOfConfig":"66"},{"size":3790,"mtime":1618306617000,"results":"108","hashOfConfig":"66"},{"size":593,"mtime":1618306617000,"results":"109","hashOfConfig":"66"},{"size":4411,"mtime":1621866709688,"results":"110","hashOfConfig":"66"},{"size":462,"mtime":1618306617000,"results":"111","hashOfConfig":"66"},{"size":1027,"mtime":1618306617000,"results":"112","hashOfConfig":"66"},{"size":969,"mtime":1618306617000,"results":"113","hashOfConfig":"66"},{"size":993,"mtime":1618306617000,"results":"114","hashOfConfig":"66"},{"size":276,"mtime":1618306617000,"results":"115","hashOfConfig":"66"},{"size":1412,"mtime":1618306617000,"results":"116","hashOfConfig":"66"},{"size":616,"mtime":1622104559613,"results":"117","hashOfConfig":"66"},{"size":1434,"mtime":1622209775971,"results":"118","hashOfConfig":"66"},{"size":6524,"mtime":1622261114975,"results":"119","hashOfConfig":"66"},{"size":5571,"mtime":1622260703205,"results":"120","hashOfConfig":"66"},{"size":750,"mtime":1621941763007,"results":"121","hashOfConfig":"66"},{"size":1045,"mtime":1622218859239,"results":"122","hashOfConfig":"66"},{"size":5181,"mtime":1622090976994,"results":"123","hashOfConfig":"66"},{"size":350,"mtime":1622090214042,"results":"124","hashOfConfig":"66"},{"size":3133,"mtime":1622088582096,"results":"125","hashOfConfig":"66"},{"size":17835,"mtime":1622397525204,"results":"126","hashOfConfig":"66"},{"size":3133,"mtime":1622122091050,"results":"127","hashOfConfig":"66"},{"size":439,"mtime":1622261892921,"results":"128","hashOfConfig":"66"},{"size":1672,"mtime":1622287490814,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"qabce4",{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"132"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"132"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"132"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"132"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"132"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"132"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"132"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"132"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"132"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"132"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"132"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"132"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"132"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"264","messages":"265","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"132"},"/home/tapclicks/Desktop/code/kart/kart-ui/src/index.js",[],["273","274"],"/home/tapclicks/Desktop/code/kart/kart-ui/src/serviceWorker.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/context/UserContext.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/context/LayoutContext.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/App.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/themes/index.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/themes/default.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Layout/Layout.js",["275"],"import React from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { Box, IconButton, Link } from '@material-ui/core'\nimport Icon from '@mdi/react'\n\n//icons\nimport {\n  mdiFacebook as FacebookIcon,\n  mdiTwitter as TwitterIcon,\n  mdiGithub as GithubIcon,\n} from '@mdi/js'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// pages\nimport Dashboard from \"../../pages/dashboard\";\nimport Typography from \"../../pages/typography\";\nimport Notifications from \"../../pages/notifications\";\nimport Maps from \"../../pages/maps\";\nimport Tables from \"../../pages/tables\";\nimport Icons from \"../../pages/icons\";\nimport Charts from \"../../pages/charts\";\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\nimport Admin from \"../Admin/adminPage\";\nimport ProductCreateAndEdit from \"../Product/product\";\nimport ViewProduct from \"../Product/viewproduct\";\nimport { UserPage } from \"../../pages/users/user\";\nimport { CheckoutPage } from '../../pages/checkout/checkout'\nimport { OrderSuccessPage } from '../../pages/checkout/orderplaced'\n\n\n\nfunction Layout(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n      <>\n        <Header history={props.history} />\n        <Sidebar />\n        <div\n          className={classnames(classes.content, {\n            [classes.contentShift]: layoutState.isSidebarOpened,\n          })}\n        >\n          <div className={classes.fakeToolbar} />\n          <Switch>\n            <Route path=\"/app/dashboard\" component={Dashboard} />\n            <Route path=\"/app/typography\" component={Typography} />\n            <Route path=\"/app/tables\" component={Tables} />\n            <Route path=\"/app/notifications\" component={Notifications} />\n            <Route path=\"/app/admin\" component={Admin} />\n            <Route path=\"/app/product/create\" component={() => <ProductCreateAndEdit isEdit={false} />} />\n            <Route path=\"/app/product/edit/:id\" component={() => <ProductCreateAndEdit isEdit={true} />} />\n\n            <Route path=\"/app/product/view/:id\" component={ViewProduct} />\n            <Route path=\"/app/user/edit\" component={UserPage} />\n            <Route path=\"/app/checkout\" component={CheckoutPage} />\n            <Route path=\"/app/order/sucess\" component={OrderSuccessPage} />\n\n\n\n\n\n            <Route\n              exact\n              path=\"/app/ui\"\n              render={() => <Redirect to=\"/app/ui/icons\" />}\n            />\n            <Route path=\"/app/ui/maps\" component={Maps} />\n            <Route path=\"/app/ui/icons\" component={Icons} />\n            <Route path=\"/app/ui/charts\" component={Charts} />\n\n          </Switch>\n          <Box\n            mt={5}\n            width={\"100%\"}\n            display={\"flex\"}\n            alignItems={\"center\"}\n            justifyContent=\"space-between\"\n          >\n            <div>\n              <Link\n                color={'primary'}\n                href={'https://google.com/'}\n                target={'_blank'}\n                className={classes.link}\n              >\n                Flatlogic\n                </Link>\n              <Link\n                color={'primary'}\n                href={'https://google.com/about'}\n                target={'_blank'}\n                className={classes.link}\n              >\n                About Us\n                </Link>\n              <Link\n                color={'primary'}\n                href={'https://google.com/blog'}\n                target={'_blank'}\n                className={classes.link}\n              >\n                Blog\n                </Link>\n            </div>\n            <div>\n              <Link\n                href={'https://www.facebook.com/flatlogic'}\n                target={'_blank'}\n              >\n                <IconButton aria-label=\"facebook\">\n                  <Icon\n                    path={FacebookIcon}\n                    size={1}\n                    color=\"#6E6E6E99\"\n                  />\n                </IconButton>\n              </Link>\n              <Link\n                href={'https://twitter.com/flatlogic'}\n                target={'_blank'}\n              >\n                <IconButton aria-label=\"twitter\">\n                  <Icon\n                    path={TwitterIcon}\n                    size={1}\n                    color=\"#6E6E6E99\"\n                  />\n                </IconButton>\n              </Link>\n              {/* <Link\n                  href={'https://github.com/flatlogic'}\n                  target={'_blank'}\n                >\n                  <IconButton\n                    aria-label=\"github\"\n                    style={{marginRight: -12}}\n                  >\n                    <Icon\n                      path={GithubIcon}\n                      size={1}\n                      color=\"#6E6E6E99\"\n                    />\n                  </IconButton>\n                </Link> */}\n            </div>\n          </Box>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/error/Error.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/Login.js",["276","277","278"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n// import classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport LoginPage from './loginPage'\n\nimport RegPage from './regPage'\n\n// logo\nimport logo from \"./logo.svg\";\n// import google from \"../../images/google.svg\";\n\n// context\n// import { useUserDispatch, loginUser, registerUser } from \"../../context/UserContext\";\n\n\nfunction Login(props) {\n\n  var classes = useStyles();\n  const [isForgotPassword, setisForgotPassword] = useState(false)\n\n  // global\n  // var userDispatch = useUserDispatch();\n\n  // local\n  var [activeTabId, setActiveTabId] = useState(0);\n\n\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotypeContainer}>\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\n        <Typography className={classes.logotypeText}>Mobi Store</Typography>\n      </div>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n\n          {!isForgotPassword && <><Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered>\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\n          </Tabs>{activeTabId === 0 ? <LoginPage setPassword={setisForgotPassword} /> : <RegPage />}\n\n          </>}\n\n          {isForgotPassword && <Grid>\n            <TextField type=\"email\"></TextField>\n          </Grid>}\n        </div>\n        <Typography color=\"primary\" className={classes.copyright}>\n          © 2021-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://google.com\" rel=\"noopener noreferrer\" target=\"_blank\">Mobi Store</a>, LLC. All rights reserved.\n        </Typography>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/regPage.js",["279","280","281","282","283","284","285"],"import React, { useState, useEffect } from \"react\";\nimport {\n    Grid,\n    CircularProgress,\n    Typography,\n    Button,\n    Tabs,\n    Tab,\n    TextField,\n    Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\nimport { register } from './login.service'\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\";\n\nimport { useUserDispatch } from \"../../context/UserContext\";\n\n\nfunction RegPage(props) {\n    var classes = useStyles();\n\n    const dispatch = useUserDispatch();\n\n\n    var [isLoading, setIsLoading] = useState(false);\n    var [error, setError] = useState(null);\n    var [firstName, setFirstName] = useState(\"\");\n    var [lastName, setLastName] = useState(\"\");\n    var [loginValue, setLoginValue] = useState(\"\");\n    var [passwordValue, setPasswordValue] = useState(\"\");\n\n    function regUser() {\n        setIsLoading(true);\n        register(firstName, lastName, loginValue, passwordValue).then(res => {\n            if (res.data) {\n                localStorage.setItem('id_token', res.data.accessToken);\n                setError(null)\n                setIsLoading(false)\n                dispatch({ type: 'LOGIN_SUCCESS' })\n                props.history.push('/app/dashboard')\n            }\n        }).catch(err => {\n            setError(true)\n            setIsLoading(false)\n            // userDispatch({ type: 'LOGIN_FAILURE' })\n        })\n    }\n    useEffect(()=>{\n        document.title = \"Register\"\n    })\n\n    return (<React.Fragment>\n        <Typography variant=\"h1\" className={classes.greeting}>\n            Welcome!  New User\n        </Typography>\n        {/* <Button size=\"large\" className={classes.googleButton}>\n          <img src={google} alt=\"google\" className={classes.googleIcon} />\n          &nbsp;Sign in with Google\n        </Button>\n        <div className={classes.formDividerContainer}>\n          <div classNaMaterialme={classes.formDivider} />\n          <Typography className={classes.formDividerWord}>or</Typography>\n          <div className={classes.formDivider} />\n        </div> */}\n        {error && <Typography color=\"secondary\" className={classes.errorMessage}>\n            Something is wrong with your login or password :(\n          </Typography>}\n          <TextField\n            id=\"firstName\"\n            InputProps={{\n                classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                },\n            }}\n            value={firstName}\n            onChange={e => setFirstName(e.target.value)}\n            margin=\"normal\"\n            placeholder=\"First Name\"\n            type=\"email\"\n            fullWidth\n        />\n         <TextField\n            id=\"lastName\"\n            InputProps={{\n                classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                },\n            }}\n            value={lastName}\n            onChange={e => setLastName(e.target.value)}\n            margin=\"normal\"\n            placeholder=\"LastName\"\n            type=\"email\"\n            fullWidth\n        />\n        <TextField\n            id=\"regemail\"\n            InputProps={{\n                classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                },\n            }}\n            value={loginValue}\n            onChange={e => setLoginValue(e.target.value)}\n            margin=\"normal\"\n            placeholder=\"Email Adress\"\n            type=\"email\"\n            fullWidth\n        />\n        <TextField\n            id=\"regpassword\"\n            InputProps={{\n                classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                },\n            }}\n            value={passwordValue}\n            onChange={e => setPasswordValue(e.target.value)}\n            margin=\"normal\"\n            placeholder=\"Password\"\n            type=\"password\"\n            fullWidth\n        />\n        <div className={classes.formButtons}>\n            {isLoading ? (\n                <CircularProgress size={26} className={classes.loginLoader} />\n            ) : (\n                    <Button\n                    id=\"regbtn\"\n                        disabled={\n                            loginValue.length === 0 || passwordValue.length === 0 ||\n                            firstName.length === 0 || lastName.length === 0\n                        }\n                        onClick={() =>\n                            regUser()\n                        }\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                    >\n                        Register\n                    </Button>\n                )}\n        </div>\n    </React.Fragment>)\n}\n\nexport default withRouter(RegPage)","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/loginPage.js",["286","287","288","289","290","291","292"],"import React, { useEffect, useState } from \"react\";\nimport {\n    Grid,\n    CircularProgress,\n    Typography,\n    Button,\n    Tabs,\n    Tab,\n    TextField,\n    Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\nimport { login } from './login.service'\nimport { useUserDispatch } from \"../../context/UserContext\";\n\n// styles\nimport useStyles from \"./styles\";\n// var userDispatch = useUserDispatch();\n\n// logo\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\";\n\nfunction LoginPage(props) {\n    var classes = useStyles();\n    const dispatch = useUserDispatch()\n\n    var [isLoading, setIsLoading] = useState(false);\n    var [error, setError] = useState(null);\n    var [loginValue, setLoginValue] = useState(\"\");\n    var [passwordValue, setPasswordValue] = useState(\"\");\n\n    function loginUser() {\n        setIsLoading(true);\n        login(loginValue, passwordValue).then(res => {\n            if (res.data) {\n                localStorage.setItem('id_token', res.data.accessToken);\n                localStorage.setItem('role', res.data.role);\n                localStorage.setItem('name', res.data.name);\n                dispatch({ type: 'LOGIN_SUCCESS', role: res.data.role, name: res.data.name })\n                props.history.push('/app/dashboard')\n            }\n            setError(null)\n            setIsLoading(false)\n        }).catch(err => {\n            setError(true)\n            setIsLoading(false)\n        })\n    }\n\n    useEffect(()=>{\n        document.title = \"Login\"\n    })\n\n    return (<React.Fragment>\n        <Typography variant=\"h1\" className={classes.greeting}>\n            Welcome!  Login\n        </Typography>\n        {error && <Typography color=\"secondary\" className={classes.errorMessage}>\n            <ul>\n                <li>\n                    Inavlid Credentials\n                </li>\n                <li>\n                    Password 8 character\n                </li>\n            </ul>\n        </Typography>}\n        <TextField\n            id=\"email\"\n            InputProps={{\n                classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                },\n            }}\n            value={loginValue}\n            onChange={e => setLoginValue(e.target.value)}\n            margin=\"normal\"\n            placeholder=\"Email Adress\"\n            type=\"email\"\n            fullWidth\n        />\n        <TextField\n            id=\"password\"\n            InputProps={{\n                classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                },\n            }}\n            value={passwordValue}\n            onChange={e => setPasswordValue(e.target.value)}\n            margin=\"normal\"\n            placeholder=\"Password\"\n            type=\"password\"\n            fullWidth\n        />\n        <div className={classes.formButtons}>\n            {isLoading ? (\n                <CircularProgress size={26} className={classes.loginLoader} />\n            ) : (\n                    <Button\n                id=\"loignBtn\"\n\n                        disabled={\n                            loginValue.length === 0 || passwordValue.length === 0\n                        }\n                        onClick={() =>\n                            loginUser()\n                        }\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                    >\n                        Login\n                    </Button>\n                )}\n            <Button\n                color=\"primary\"\n                size=\"large\"\n                onClick={()=>props.setPassword(true)}\n                className={classes.forgetButton}\n            >\n                Forget Password\n          </Button>\n        </div>\n    </React.Fragment>)\n}\n\nexport default withRouter(LoginPage)","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/login.service.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/error/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Layout/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Admin/adminPage.js",["293","294","295","296","297","298","299"],"\n\nimport React, { useState, useEffect } from \"react\";\nimport { Router, Route, Link } from 'react-router-dom';\n\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button,\n  Typography\n} from \"@material-ui/core\";\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/Inbox';\n\nimport { getMyProducts } from './services/admin.service'\n\nimport PageTitle from \"../../components/PageTitle\";\nimport Avatar from '@material-ui/core/Avatar';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\n\nexport default function Admin(props) {\n\n  const [products, setProducts] = useState([]);\n\n  const [isLoading, setisLoading] = useState(true);\n\n  useEffect(() => {\n    getMyProducts().then(res => {\n      setProducts(res);\n      setisLoading(false)\n    })\n    return () => { }\n  }, [])\n\n  return <>\n    <PageTitle title=\"My Products\" button={<Link to=\"/app/product/create\" style={{ textDecoration: 'none' }}><Button\n      variant=\"contained\"\n      size=\"medium\"\n      color=\"secondary\"\n    >\n      Add new\n      </Button> </Link>} />\n    {!isLoading && <Grid><List component=\"nav\" aria-label=\"main mailbox folders\">\n      {products.map(product => <><Link to={'/app/product/edit/' + product.id} style={{ textDecoration: 'none' }} key={product.id}><ListItem button >\n        <ListItemIcon>\n          <AvatarGroup max={2}>\n            {product.images.map(image => <Avatar alt=\"Remy Sharp\" src={'http://localhost:5000/' + image.path} />)}\n          </AvatarGroup>\n        </ListItemIcon>\n        <ListItemText style={{ margin: '0 40px' }} primary={product.name} secondary={<React.Fragment>\n          <Typography variant=\"subtitle2\">{'$ ' + product.prize} {', Stock:'+ product.stock}</Typography>\n        </React.Fragment>} />\n      </ListItem>\n        <Divider />\n      </Link>\n      </>)}\n    </List>\n    </Grid>}\n  </>\n}\n","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/tables/Tables.js",["300","301","302"],"import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MUIDataTable from \"mui-datatables\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport Table from \"../dashboard/components/Table/Table\";\n\n// data\nimport mock from \"../dashboard/mock\";\n\nimport { getOrders } from \"../checkout/services/order.service\";\n\nconst datatableData = [\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Pending\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Pending\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Delivered\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Delivered\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Delivered\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Delivered\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Delivered\"],\n  [\"Iphone 8\", \"Apple Inc.\", \"900$\", \"Delivered\"],\n  [\"Acer Laptop\", \"Apple Inc.\", \"1500$\", \"Delivered\"],\n  [\"Iphone Charger\", \"Apple Inc.\", \"100$\", \"Delivered\"],\n];\n\nconst useStyles = makeStyles(theme => ({\n  tableOverflow: {\n    overflow: 'auto'\n  }\n}))\n\nexport default function Tables() {\n  const classes = useStyles();\n\n  const [orders, setorders] = useState([])\n\n  useEffect(() => {\n    getOrders().then(res => {\n      setorders(res)\n    })\n    return () => {\n\n    }\n  }, [])\n\n\n  return (\n    <>\n      <PageTitle title=\"Orders\" />\n      <Grid container spacing={4}>\n        {/* <Grid item xs={12}>\n          <MUIDataTable\n            title=\"Employee List\"\n            data={datatableData}\n            columns={[\"Item\", \"Brand\", \"Price\", \"Status\"]}\n            options={{\n              filterType: \"checkbox\",\n            }}\n          />\n        </Grid> */}\n\n        <Grid item xs={12}>\n          <Widget title=\"Previous Orders\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n            <Table data={orders} />\n          </Widget>\n      </Grid>\n      {/* <Grid item xs={12}>\n        <Widget title=\"Previous Orders\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n          <Table data={mock.table} />\n        </Widget>\n      </Grid> */}\n    </Grid>\n    </>\n  );\n}\n","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/charts/Charts.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/notifications/Notifications.js",["303","304","305","306","307","308","309","310","311","312","313"],"import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport classnames from \"classnames\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Notification from \"../../components/Notification\";\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\nexport default function NotificationsPage(props) {\n  var classes = useStyles();\n\n  // local\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  var [errorToastId, setErrorToastId] = useState(null);\n\n  return (\n    <>\n      <PageTitle title=\"Notifications\" />\n      {/* <Grid container spacing={4}>\n        <ToastContainer\n          className={classes.toastsContainer}\n          closeButton={\n            <CloseButton className={classes.notificationCloseButton} />\n          }\n          closeOnClick={false}\n          progressClassName={classes.notificationProgress}\n        />\n        <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n          <Grid container item xs={12}>\n          <Grid item xs={4}>\n          <Widget title=\"Layout Options\" noWidgetShadow disableWidgetMenu noBodyPadding noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n            <Typography>\n              There are few position options available for notifications. You\n              can click any of them to change notifications position:\n            </Typography>\n            <div className={classes.layoutContainer}>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(0)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 0,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(1)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 1,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(2)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 2,\n                  })}\n                />\n              </div>\n              <Typography className={classes.layoutText} size=\"md\">\n                Click any position\n              </Typography>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(3)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 3,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(4)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 4,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(5)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 5,\n                  })}\n                />\n              </div>\n            </div>\n          </Widget>\n            </Grid>\n            <Grid item xs={4}>\n          <Widget title=\"Notifications Types\" disableWidgetMenu noBodyPadding noWidgetShadow noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n            <Typography>\n              Different types of notifications for lost of use cases. Custom\n              classes are also supported.\n            </Typography>\n            <div className={classes.buttonsContainer}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => handleNotificationCall(\"info\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Info Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => handleNotificationCall(\"error\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Error + Retry Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                onClick={() => handleNotificationCall(\"success\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Success Message\n              </Button>\n            </div>\n          </Widget>\n            </Grid>\n            <Grid item xs={4}>\n          <Widget title=\"Usage\" disableWidgetMenu noBodyPadding noWidgetShadow noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n            <Typography>\n              Notifications are created with the help of{\" \"}\n              <a href=\"https://github.com/fkhadra/react-toastify\">\n                react-toastify\n              </a>\n            </Typography>\n            <div className={classes.codeContainer}>\n              <SyntaxHighlighter\n                className={classes.codeComponent}\n                language=\"javascript\"\n                style={docco}\n              >{`\n  // import needed components, functions and styles\n  import { ToastContainer, toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\n\n  const Page = () => {\n    <div>\n      <ToastContainer />\n      <button onClick={() => toast('Toast Message')}>\n        show notification\n      </button>\n    </div>\n  };\n            `}</SyntaxHighlighter>\n              <Typography variant=\"caption\">\n                For more API information refer to the library documentation\n              </Typography>\n            </div>\n          </Widget>\n            </Grid>\n          </Grid>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"message\"\n              message=\"Thanks for Checking out Messenger\"\n              variant=\"contained\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"customer\"\n              message=\"New customer is registered\"\n              variant=\"contained\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"shipped\"\n              message=\"The order was shipped\"\n              variant=\"contained\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"delivered\"\n              message=\"The order was delivered\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"defence\"\n              message=\"5 Defence alerts\"\n              variant=\"contained\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              variant=\"rounded\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              variant=\"rounded\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              variant=\"rounded\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              variant=\"rounded\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n      </Grid> */}\n    </>\n  );\n\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\",\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\",\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\",\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Message was not sent!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification,\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was shipped\",\n          variant: \"contained\",\n          color: \"success\",\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n}\n\n// #############################################################\nfunction CloseButton({ closeToast, className }) {\n  return <CloseIcon className={className} onClick={closeToast} />;\n}\n","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/maps/Maps.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/icons/Icons.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/Sidebar.js",["314","315","316","317","318"],"import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\n\nimport {\n  useUserState\n} from \"../../context/UserContext\";\n\nconst structure = [\n  { id: 0, label: \"Home\", link: \"/app/dashboard\", icon: <HomeIcon />, role: ['GHOST'] },\n  // {\n  //   id: 1,\n  //   label: \"Typography\",\n  //   link: \"/app/typography\",\n  //   icon: <TypographyIcon />,\n  // },\n  { id: 2, label: \"Orders\", link: \"/app/tables\", icon: <TableIcon />, role: ['GHOST'] },\n  {\n    id: 3,\n    label: \"Notifications\",\n    link: \"/app/notifications\",\n    icon: <NotificationsIcon />,\n    role: ['GHOST']\n  },\n  // {\n  //   id: 4,\n  //   label: \"UI Elements\",\n  //   link: \"/app/ui\",\n  //   icon: <UIElementsIcon />,\n  //   children: [\n  //     { label: \"Icons\", link: \"/app/ui/icons\" },\n  //     { label: \"Charts\", link: \"/app/ui/charts\" },\n  //     { label: \"Maps\", link: \"/app/ui/maps\" },\n  //   ],\n  // },\n  { id: 5, type: \"divider\" },\n  { id: 6, type: \"title\", label: \"SELLER\", role: ['ADMIN', \"MANAGER\"] },\n  { id: 7, label: \"Mange Products\", link: \"/app/admin\", icon: <LibraryIcon />, role: ['ADMIN', \"MANAGER\"] },\n  { id: 6, type: \"title\", label: \"HELP\", role: ['GHOST'] },\n  { id: 8, label: \"Support\", link: \"https://google.com/forum\", icon: <SupportIcon />, role: ['GHOST'] },\n  { id: 9, label: \"FAQ\", link: \"https://google.com/forum\", icon: <FAQIcon />, role: ['GHOST'] },\n  { id: 10, type: \"divider\" },\n  // { id: 11, type: \"title\", label: \"PROJECTS\" },\n  // {\n  //   id: 12,\n  //   label: \"My recent\",\n  //   link: \"\",\n  //   icon: <Dot size=\"small\" color=\"warning\" />,\n  //   role: ['GHOST']\n  // },\n  // {\n  //   id: 13,\n  //   label: \"Starred\",\n  //   link: \"\",\n  //   icon: <Dot size=\"small\" color=\"primary\" />,\n  //   role: ['GHOST']\n  // },\n  // {\n  //   id: 14,\n  //   label: \"Background\",\n  //   link: \"\",\n  //   icon: <Dot size=\"small\" color=\"secondary\" />,\n  //   role: ['GHOST']\n  // },\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  var { role } = useUserState();\n\n\n  // local\n  var [isPermanent, setPermanent] = useState(false);\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          (link['isAdminOnly'] && role in link.role || !link['isAdminOnly']) && <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/typography/Typography.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/Dashboard.js",["319","320","321","322","323"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Grid,\n  InputBase,\n  Card,\n  CardActionArea,\n  CardMedia,\n  Typography,\n  CardContent,\n  CardActions,\n  ClickAwayListener\n} from \"@material-ui/core\";\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport { Skeleton } from '@material-ui/lab'\nimport { useTheme } from \"@material-ui/styles\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport { getAllPoducts, getImageUrl } from './services/product.service'\n\nimport { getCartItems, addToCart, removeFromCart } from '../../components/Product/service/cart'\n\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [products, setProducts] = useState([]);\n\n  const [cartItems, setcartProductItems] = useState([]);\n\n  const [searchKey, setSearchKey] = useState('');\n\n\n  const [open, setOpen] = React.useState(false);\n\n\n  function addToCartItem(product) {\n    setIsLoading(true);\n    addToCart({ product, quantity: 1 }).then(res => {\n      setcartProductItems(cartItems.concat(product))\n      setIsLoading(false);\n\n    })\n  }\n\n  function removeFromCartItem(product) {\n    setIsLoading(true);\n    removeFromCart(product).then(res => {\n      getCartItems().then(res => {\n        setcartProductItems(res.map(r => r.productId));\n      })\n      setIsLoading(false);\n\n    })\n  }\n\n  function getProductswithquesry() {\n    getAllPoducts(searchKey).then(res => {\n      console.log(res);\n      setProducts(res);\n      setIsLoading(false)\n    })\n\n  }\n\n\n  useEffect(() => {\n    document.title = 'Mobi Store'\n    getCartItems().then(res => {\n      setcartProductItems(res.map(r => r.productId));\n    })\n    getAllPoducts('').then(res => {\n      console.log(res);\n      setProducts(res);\n      setIsLoading(false)\n    })\n    // return () => {\n    //   cleanup\n    // }\n  }, [])\n  console.log(products, \"PRODS\", isLoading);\n\n  return (\n    <>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Card style={{ width: '40%' }} item >\n            <div className={classes.root}>\n              {/* <button type=\"button\" onClick={()=> setOpen(true)}>\n                Open menu dropdown\n                </button> */}\n              <InputBase\n                className=\"card\"\n                id=\"searchProduct\"\n                onFocus={() => setOpen(true)}\n                placeholder=\"Search…\"\n                value={searchKey}\n                onChange={(e) => {setSearchKey(e.target.value);}}\n                style={{ width: '100%' }}\n                classes={{\n                root: classes.searchInput,\n                input: classes.inputInput,\n              }}\n              />\n            </div>\n        </Card>\n        {/* {open ? (\n          <div className={classes.searchDropdown} style={{ width: '40%' }}>\n            Click me, I will stay visible until you click outside.\n            <br></br>\n              dfef\n              ewfewf\n              efew\n              fewfew\n              fewf\n          </div>\n        ) : null} */}\n      </Grid>\n      <PageTitle title=\"All Products\" button={<Button\n        variant=\"contained\"\n        size=\"medium\"\n        color=\"secondary\"\n      >\n        Latest Phones\n    </Button>} />\n      { isLoading && <Grid container spacing={4}>\n        {[0, 1, 2, 3, 4].map(ele => <Grid item lg={3} md={4} sm={6} xs={12} key={ele}><Skeleton variant=\"rect\" width={310} height={218} /></Grid>)}\n      </Grid>\n      }\n      {!isLoading && <Grid container alignItems=\"stretch\" direction=\"row\" id=\"productsList\"\n        spacing={4}>\n        {products.filter(product => product.name.toLowerCase().includes(searchKey.toLowerCase())).map(product => <Grid item lg={3} md={4} sm={6} xs={12} key={product.id}>\n          <Link to={'/app/product/view/' + product.id}>\n            <Card className={classes.root} style={{ height: '100%' }}>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image={getImageUrl(product)}\n                  title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                    {product.name}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    $ {product.prize}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Grid container justify=\"flex-end\" alignItems=\"flex-end\" style={{bottom:0}}>\n                  {!(cartItems.includes(product.id)) && <Button size=\"medium\" color=\"primary\" onClick={(e) => { e.stopPropagation(); e.preventDefault(); e.nativeEvent.stopImmediatePropagation(); addToCartItem(product.id) }}>\n                    Add to cart\n                        </Button>}\n                  {(cartItems.includes(product.id)) && <Button size=\"medium\" color=\"secondary\"\n                    onClick={(e) => { e.stopPropagation(); e.preventDefault(); e.nativeEvent.stopImmediatePropagation(); removeFromCartItem(product.id) }}>\n                    Remove\n                    </Button>}\n                </Grid>\n\n              </CardActions>\n            </Card>\n          </Link>\n\n        </Grid>)}\n      </Grid>}\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n\n  return resultArray;\n}\n","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Header/Header.js",["324","325","326","327","328","329","330","331","332","333","334","335","336"],"import React, { useState, useEffect } from \"react\";\n\nimport { Link } from 'react-router-dom';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Drawer,\n  Grid,\n  Divider,\n  Card\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n  ShoppingCartOutlined as Cart,\n  Delete\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\nimport { useHistory } from 'react-router-dom';\n\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut, useUserState, removeItem } from \"../../context/UserContext\";\n\nimport { getCartItems, removeFromCart, setCartQuantity, updateCartQunatityApi } from '../Product/service/cart'\n\nconst messages = [];\n\nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  {\n    id: 1,\n    color: \"success\",\n    type: \"info\",\n    message: \"What is the best way to get ...\",\n  },\n  {\n    id: 2,\n    color: \"secondary\",\n    type: \"notification\",\n    message: \"This is just a simple notification\",\n  },\n  {\n    id: 3,\n    color: \"primary\",\n    type: \"e-commerce\",\n    message: \"12 new orders has arrived today\",\n  },\n];\n\nexport default function Header(props) {\n  var classes = useStyles();\n  var userState = useUserState();\n  const history = useHistory()\n\n\n  const [drawer, setDrawer] = useState(userState.isDrawerOpen);\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n  console.log(userState, \"----\");\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(true);\n  var [cartItems, setCartItems] = useState([]);\n  const [isLoading, setisLoading] = useState(false)\n\n  function updateQuantity(cartId, quantity) {\n    if (quantity > -1) {\n      setisLoading(true)\n      updateCartQunatityApi(cartId, { quantity }).then(res => {\n        getCartItems().then(re => {\n          setCartItems(re)\n        });\n        setisLoading(false);\n\n      }).catch(err => {\n        setisLoading(false)\n\n      })\n    }\n  }\n\n  function removeFromCartItem(product) {\n    // setisLoading(true);\n    removeFromCart(product).then(res => {\n      getCartItems().then(res => {\n        setCartItems(res);\n        removeItem(userDispatch)\n      })\n      setisLoading(false);\n\n    })\n  }\n\n  function getCartItemsLocal() {\n    getCartItems().then(re => {\n      setCartItems(re)\n    })\n  }\n\n\n\n  useEffect(() => {\n    console.log(\"USE EFFECT\");\n    setDrawer(userState.isDrawerOpen)\n    getCartItems().then(re => {\n      setCartItems(re)\n    })\n    return () => {\n\n    }\n  }, [])\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButtonSandwich,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n              <MenuIcon\n                classes={{\n                  root: classNames(\n                    classes.headerIcon,\n                    classes.headerIconCollapse,\n                  ),\n                }}\n              />\n            )}\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n          Mobi Store\n        </Typography>\n        <div className={classes.grow} />\n        {/* <Button component={Link} href=\"https://google.com/templates/react-material-admin-full\" variant={\"outlined\"} color={\"secondary\"} className={classes.purchaseBtn}>Unlock full version</Button>\n        <div\n          className={classNames(classes.search, {\n            [classes.searchFocused]: isSearchOpen,\n          })}\n        >\n          <div\n            className={classNames(classes.searchIcon, {\n              [classes.searchIconOpened]: isSearchOpen,\n            })}\n            onClick={() => setSearchOpen(!isSearchOpen)}\n          >\n            <SearchIcon classes={{ root: classes.headerIcon }} />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div> */}\n        {/* <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={() => { setDrawer(!drawer); getCartItemsLocal(); }}\n          onClick={e => {\n            setNotificationsMenu(e.currentTarget);\n            setIsNotificationsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isNotificationsUnread ? notifications.length : null}\n            color=\"warning\"\n          >\n          <FavoriteIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton> */}\n\n        <IconButton\n          aria-haspopup=\"true\"\n          id=\"accountBtn\"\n          color=\"inherit\"\n          className={classes.headerMenuButton}\n          aria-controls=\"profile-menu\"\n          onClick={e => setProfileMenu(e.currentTarget)}\n        >\n          <AccountIcon classes={{ root: classes.headerIcon }} />\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          id=\"cartBtn\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={() => { setDrawer(!drawer); getCartItemsLocal(); }}\n          // onClick={e => {\n          //   setMailMenu(e.currentTarget);\n          //   setIsMailsUnread(false);\n          // }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isMailsUnread ? messages.length : null}\n            color=\"secondary\"\n          >\n            <Cart classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <Menu\n          id=\"mail-menu\"\n          open={Boolean(mailMenu)}\n          anchorEl={mailMenu}\n          onClose={() => setMailMenu(null)}\n          MenuListProps={{ className: classes.headerMenuList }}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              Items in cart\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"secondary\"\n            >\n              {messages.length} items\n            </Typography>\n          </div>\n          {messages.map(message => (\n            <MenuItem key={message.id} className={classes.messageNotification}>\n              <div className={classes.messageNotificationSide}>\n                <UserAvatar color={message.variant} name={message.name} />\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n                  {message.time}\n                </Typography>\n              </div>\n              <div\n                className={classNames(\n                  classes.messageNotificationSide,\n                  classes.messageNotificationBodySide,\n                )}\n              >\n                <Typography weight=\"medium\" gutterBottom>\n                  {message.name}\n                </Typography>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  {message.message}\n                </Typography>\n              </div>\n            </MenuItem>\n          ))}\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.sendMessageButton}\n          >\n            CheckOut\n            <SendIcon className={classes.sendButtonIcon} />\n          </Fab>\n        </Menu>\n        <Menu\n          id=\"notifications-menu\"\n          open={Boolean(notificationsMenu)}\n          anchorEl={notificationsMenu}\n          onClose={() => setNotificationsMenu(null)}\n          className={classes.headerMenu}\n          disableAutoFocusItem\n        >\n          {notifications.map(notification => (\n            <MenuItem\n              key={notification.id}\n              onClick={() => setNotificationsMenu(null)}\n              className={classes.headerMenuItem}\n            >\n              <Notification {...notification} typographyVariant=\"inherit\" />\n            </MenuItem>\n          ))}\n        </Menu>\n        <Menu\n          id=\"profile-menu\"\n          open={Boolean(profileMenu)}\n          anchorEl={profileMenu}\n          onClose={() => setProfileMenu(null)}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              {userState.name}\n            </Typography>\n            {/* <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"primary\"\n              href=\"https://google.com\"\n            >\n              Flalogic.com\n            </Typography> */}\n          </div>\n\n          <MenuItem\n            onClick={() => history.push('/app/user/edit')}\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n\n            <AccountIcon className={classes.profileMenuIcon} />  <Link to={'/app/user/edit'}>Profile\n                </Link>\n          </MenuItem>\n\n          {/* <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\n          </MenuItem> */}\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Orders\n          </MenuItem>\n          <div className={classes.profileMenuUser}>\n            <Typography\n              className={classes.profileMenuLink}\n              color=\"primary\"\n              id=\"signOutText\"\n              onClick={() => signOut(userDispatch, props.history)}\n            >\n              Sign Out\n            </Typography>\n          </div>\n        </Menu>\n        {/* <Button onClick={() => setDrawer(!drawer)}>anchor</Button> */}\n        <Drawer anchor=\"right\" open={drawer} onClose={() => setDrawer(!drawer)} >\n          <div style={{ width: '500px', overflow: 'auto' }}>\n            <Card style={{ padding: '20px 30px', position: \"fixed\", width: '100%' }}>\n              <Typography variant=\"h6\" weight=\"medium\">Cart</Typography>\n            </Card>\n\n            <Grid wrap=\"nowrap\" style={{ marginTop: '70px' }}><List component=\"nav\" aria-label=\"main mailbox folders\" id=\"cartContent\">\n              {cartItems.map(cart => <><Link to={'/app/product/edit/' + cart.product.id}><ListItem button >\n                <ListItemIcon>\n                  <AvatarGroup max={2}>\n                    {cart.product.images.map(image => <Avatar alt=\"Remy Sharp\" src={'http://localhost:5000/' + image.path} />)}\n                  </AvatarGroup>\n                </ListItemIcon>\n                <ListItemText style={{ margin: '0 20px' }} primary={cart.product.name} secondary={\n                  <React.Fragment>\n                    <Button size=\"medium\" color=\"secondary\" disabled={cart.quantity === 0}\n                      onClick={(e) => { e.stopPropagation(); e.preventDefault(); e.nativeEvent.stopImmediatePropagation(); updateQuantity(cart.id, cart.quantity - 1) }}>\n                      -\n                    </Button>\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      className={classes.inline}\n                      color=\"textPrimary\"\n                    >\n                      {cart.quantity}\n                    </Typography>\n                    <Button size=\"medium\" color=\"primary\"\n                      onClick={(e) => { e.stopPropagation(); e.preventDefault(); e.nativeEvent.stopImmediatePropagation(); updateQuantity(cart.id, cart.quantity + 1) }}>+</Button>\n\n                    <Button size=\"medium\" color=\"secondary\"\n                      onClick={(e) => { e.stopPropagation(); e.preventDefault(); e.nativeEvent.stopImmediatePropagation(); removeFromCartItem(cart.product.id); }}>\n                      <Delete />\n                    </Button>\n\n                    <Typography variant=\"h6\">$ {cart.quantity * cart.product.prize} /-</Typography>\n                  </React.Fragment>\n                } />\n\n                {/* <ListItemText style={{ margin: '0 20px' }} primary={cart.product.name} secondary={'$ ' + (cart.product.prize * cart.quantity) + '/-   Quantity: ' + String(cart.quantity)} /> */}\n              </ListItem><Divider /></Link></>)}\n            </List>\n            </Grid>\n            <Grid justify=\"center\">\n              <Card style={{ padding: '20px 30px', position: \"fixed\", width: '100%', bottom: '0' }}>\n                <Divider />\n                <Fab\n                  variant=\"extended\"\n                  color=\"primary\"\n                  onClick={() => { setDrawer(false); history.push('/app/checkout') }}\n                  disabled={!cartItems.length}\n                  aria-label=\"Add\"\n                  className={classes.sendMessageButton}\n                >\n                  CheckOut\n            <SendIcon className={classes.sendButtonIcon} />\n                </Fab>\n              </Card>\n            </Grid>\n          </div>\n        </Drawer>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/mock.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/icons/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/notifications/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/maps/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/charts/components/ApexHeatmap.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/charts/components/ApexLineChart.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Header/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/PageTitle/PageTitle.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/components/Table/Table.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/components/Dot.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/components/BigStat/BigStat.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Widget/Widget.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Notification/Notification.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/typography/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Wrappers/Wrappers.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/UserAvatar/UserAvatar.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/PageTitle/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/components/BigStat/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Widget/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Notification/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/UserAvatar/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/components/SidebarLink/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/services/product.service.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Admin/services/admin.service.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/product.js",["337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355"],"\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport {\n    Grid,\n    LinearProgress,\n    Select,\n    OutlinedInput,\n    MenuItem,\n    Button,\n    Input,\n    TextField,\n    IconButton\n} from \"@material-ui/core\";\nimport { Skeleton } from '@material-ui/lab';\n\nimport { DropzoneArea } from 'material-ui-dropzone'\n\n\n\nimport { getProductInfo, addProduct, updateProduct, deleteProduct, addImage, removeImage , updateProductImages} from \"../Admin/services/admin.service\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Delete } from \"@material-ui/icons\";\n\n\nexport default function ProductCreateAndEdit(props) {\n\n    const [products, setProducts] = useState([]);\n    let { id } = useParams();\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [prize, setPrize] = useState()\n    const [stock, setStock] = useState()\n    const [images, setImages] = useState([])\n    const [intialFiles, setintialFiles] = useState([])\n    const [isLoading, setisLoading] = useState(false);\n    const [formtouch, setformtouch] = useState(false)\n\n    function addOrUpdateProduct() {\n        setformtouch(true)\n        setisLoading(true)\n        if (id) {\n            if (name && description && (prize || prize == 0) && (stock || stock == 0)) {\n                updateProduct({ name, description, prize: parseFloat(prize), stock:parseInt(stock) }, id).then(res => {\n                    setisLoading(false)\n\n                }).catch(err => {\n                    setisLoading(false)\n                })\n            }\n\n        } else {\n            if (name && description && (prize || prize == 0) && (stock || stock == 0)) {\n\n                addProduct({ name, description, prize, stock, images }).then(res => {\n                    console.log(res);\n                    setisLoading(false)\n                })\n            }\n        }\n    }\n\n    async function onImageUpload(e) {\n        setisLoading(true);\n        let form = new FormData();\n        for (let i = 0; i < e.length; i++) {\n            form.append('files', e[i])\n        }\n        if (e.length) {\n            addImage(form).then(res => {\n\n                setisLoading(false);\n                setImages(images.concat(res));\n                updateProductImages(res, id).then(re => {\n\n                })\n            }).catch(err => {\n                setisLoading(false);\n\n            });\n        }\n    }\n\n    function onImageRemove(i, image) {\n        setisLoading(true);\n\n        if (!id) {\n            let imgs = images\n            imgs.splice(i, 1)\n            setImages(imgs)\n\n        }\n\n        if (id) {\n            removeImage([image]).then(res => {\n            })\n            setisLoading(false);\n\n        }\n\n    }\n\n    function onProductRemove() {\n        setisLoading(true)\n\n        if (id) {\n            updateProduct({ name, description, prize, stock }).then(res => {\n            })\n        }\n    }\n    function mockLoading() {\n        if (id) {\n            return getProductInfo(id).then(res => {\n                console.log(res.name);\n                setisLoading(false)\n                setName(res.name)\n                setDescription(res.description)\n                setPrize(res.prize);\n                setStock(res.stock);\n                setImages(res.images.map(image => image.path))\n                console.log(prize, stock, intialFiles);\n            })\n        }\n    }\n\n    useEffect(() => {\n        mockLoading()\n    }, [])\n\n    return <>\n        <PageTitle title=\"Add Product\" />\n        <Grid container direction=\"column\" justify=\"center\"\n            alignItems=\"stretch\">\n            <Grid item direction=\"column\" justify=\"center\"\n                alignItems=\"center\" >\n                <Grid item container >\n                    <TextField fullWidth placeholder=\"Enter Title\" type=\"text\" variant=\"outlined\" label=\"Title\" style={{ width: '100%', margin: '20px' }} error={!name && formtouch} onChange={(e) => setName(e.target.value)} value={name}></TextField>\n                </Grid>\n                <Grid item container >\n                    <TextField fullWidth placeholder=\"Enter Description\" type=\"text\" variant=\"outlined\" label=\"Description\" style={{ width: '100%', margin: '20px' }} value={description} multiline error={!description && formtouch} rows={4} onChange={(e) => setDescription(e.target.value)}></TextField>\n                </Grid>\n                <Grid item container >\n                    <TextField fullWidth placeholder=\"Enter price\" InputLabelProps={{\n                        shrink: true,\n                    }} type=\"number\" variant=\"outlined\" label=\"Price\" style={{ width: '100%', margin: '20px' }} value={prize} error={!!!prize && prize != 0 && formtouch} onChange={(e) => setPrize(parseInt(e.target.value))}></TextField>\n                </Grid>\n\n                <Grid item container >\n                    <TextField fullWidth placeholder=\"Enter stock\" InputLabelProps={{\n                        shrink: true,\n                    }} type=\"number\" variant=\"outlined\" label=\"Stock\" style={{ width: '100%', margin: '20px' }} value={stock} error={!stock && stock != 0 && formtouch} onChange={(e) => setStock(parseInt(e.target.value))}></TextField>\n                </Grid>\n            </Grid>\n\n            <Grid item container style={{ width: '90%' }} justify=\"center\"\n                alignItems=\"center\">\n                <label style={{ margin: '0 30px' }}>Upload Images:</label>\n                <input type=\"file\" multiple accept=\"image/*\" onChange={(e) => { onImageUpload(e.target.files); e.target.value = null; }} />\n\n                <Grid container direction=\"row\">\n                    {images.map((image, i) => <Grid style={{ margin: '10px' }}>\n                        <img src={'http://localhost:5000/' + image} style={{ maxHeight: '170px', maxWidth: '170px' }} />\n                        <br></br>\n                        <IconButton onClick={() => onImageRemove(i, image)}><Delete color=\"secondary\" /></IconButton>\n                    </Grid>)}\n                </Grid>\n\n            </Grid>\n        </Grid>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            {!isLoading && <Button variant=\"contained\"\n                size=\"large\"\n                style={{ margin: '50px' }}\n                onClick={addOrUpdateProduct}\n                color=\"secondary\">{id ? 'update' : 'Add'}</Button>}\n\n            {isLoading && <Skeleton variant=\"rect\" width={130} height={48} />}\n        </Grid>\n    </>\n}\n","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/viewproduct.js",["356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377"],"\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport {\n    Grid,\n    LinearProgress,\n    Select,\n    OutlinedInput,\n    MenuItem,\n    Typography,\n    Card,\n    Button,\n    Input,\n    TextField,\n    Box,\n    IconButton\n} from \"@material-ui/core\";\nimport { Skeleton } from '@material-ui/lab';\n\nimport { getProductInfo, addProduct, updateProduct, deleteProduct, addImage, removeImage } from \"../Admin/services/admin.service\";\nimport PageTitle from \"../../components/PageTitle\";\nimport \"react-image-gallery/styles/css/image-gallery.css\";\n\nimport ImageGallery from 'react-image-gallery';\n\nimport { addToCart as addToCartApi, getProductCartInfo, updateCartQunatityApi } from './service/cart'\n\n// import MyReactImageMagnify from './image-maginify'\nimport { useHistory } from 'react-router-dom';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\n\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\n\nimport AddIcon from '@material-ui/icons/Add';\n\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nexport default function ViewProduct(props) {\n\n    const [addedToCart, setIsAddedToCart] = useState(false);\n    const [isWishListed, setIsWishListed] = useState(false);\n    const [cartId, setcartId] = useState();\n    const [cartQuantity, setCartQuantity] = useState();\n\n    const history = useHistory()\n\n\n\n    let { id } = useParams();\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [prize, setPrize] = useState()\n    const [stock, setStock] = useState()\n    const [images, setImages] = useState([])\n\n    const [isLoading, setisLoading] = useState(false);\n\n    function addToCart() {\n        addToCartApi({ quantity: 1, product: parseInt(id) }).then(res => {\n            setCartQuantity(1)\n            setcartId(res.id)\n        })\n    }\n\n    function updateQuantity(type) {\n        setisLoading(true)\n        updateCartQunatityApi(cartId, { quantity: type == 'ADD' ? cartQuantity + 1 : cartQuantity - 1 }).then(res => {\n            setCartQuantity(res.quantity)\n            setcartId(res.id)\n            setisLoading(false)\n\n        })\n    }\n\n    useEffect(() => {\n        if (id) {\n            getProductInfo(id).then(res => {\n                setisLoading(false)\n                setName(res.name)\n                setDescription(res.description)\n                setPrize(res.prize);\n                setStock(res.stock);\n                setImages(res.images.map(image => {\n                    return {\n                        thumbnail: `http://localhost:5000/${image.path}`,\n                        original: `http://localhost:5000/${image.path}`\n                    }\n                }\n                ))\n            })\n            getProductCartInfo(id).then(re => {\n                if (re) {\n                    setCartQuantity(re.quantity);\n                    setcartId(re.id)\n                }\n            })\n        }\n        return () => { }\n    }, [])\n\n    return <>\n        <PageTitle title={name} />\n        <Card>\n\n            <Grid container spacing={2} justify=\"space-around\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <ImageGallery items={images} showPlayButton={false} />\n\n                </Grid>\n                <Grid item >\n                    <Typography variant=\"h6\">{name}</Typography>\n                    <br></br>\n                    <Typography variant=\"subtitle2\">{description}</Typography>\n                    <br></br>\n                    <br></br>\n                    <Typography variant=\"h4\">$ {prize}</Typography>\n                    <br></br>\n                    {!cartId && <Button variant=\"contained\"\n                        size=\"large\"\n                        onClick={() => addToCart()}\n                        style={{ margin: '50px' }}\n                        color=\"secondary\">Add to Cart</Button>}\n\n                    {cartId && <Box >\n                        <IconButton onClick={() => updateQuantity('REMOVE')}>\n                            <RemoveCircleOutlineOutlinedIcon />\n                        </IconButton>\n                        <span style={{ margin: '0 10px' }} variant=\"h6\">\n                            <strong>\n                                {cartQuantity}\n                            </strong>\n                        </span>\n                        <IconButton onClick={() => updateQuantity('ADD')}>\n                            <AddCircleOutlineOutlinedIcon /></IconButton>\n                        <br></br>\n                        <br></br>\n                        <Button\n                            variant=\"contained\"\n                            size=\"medium\"\n                            color=\"secondary\"\n                            onClick={() => history.push('/app/checkout')}\n                        >\n                            Check Out\n                                </Button>\n\n                    </Box>}\n\n                </Grid>\n\n                {/* https://codesandbox.io/s/xenodochial-rosalind-g9ve4?file=/src/MyImageGallery.js */}\n            </Grid>\n            {/* <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            {!isLoading && <Button variant=\"contained\"\n                size=\"large\"\n                style={{ margin: '50px' }}\n                color=\"secondary\">{id ? 'update' : 'Add'}</Button>}\n\n            {isLoading && <Skeleton variant=\"rect\" width={130} height={48} />}\n        </Grid> */}\n        </Card>\n\n    </>\n}\n","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/image-maginify.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/service/cart.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/users/user.js",["378","379","380","381","382"],"\nimport React, { useEffect, useState } from 'react'\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\n\nimport { getUserInfo, updateUserInfo } from './services/user.service'\nimport useStyles from \"./styles\";\n\nimport {\n    Grid,\n    CircularProgress,\n    Typography,\n    Button,\n    Tabs,\n    Tab,\n    TextField,\n    Fade,\n    Collapse,\n    IconButton\n} from \"@material-ui/core\";\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport CloseIcon from \"@material-ui/icons/Close\";\n\n\nexport function UserPage(props) {\n    var classes = useStyles();\n    var [isLoading, setIsLoading] = useState(false);\n    var [error, setError] = useState(null);\n    var [firstName, setFirstName] = useState(\"\");\n    var [lastName, setLastName] = useState(\"\");\n    var [loginValue, setLoginValue] = useState(\"\");\n    var [phone, setPhoneValue] = useState(\"\");\n    const [open, setOpen] = useState(false);\n\n    function updateUser() {\n        let postData = {}\n        if(phone) {\n            postData = { firstName, lastName, phone }\n        }\n        else {\n            postData = { firstName, lastName }\n\n        }\n        updateUserInfo(postData).then(re => {\n            setOpen(true)\n        })\n    }\n\n\n    useEffect(() => {\n        getUserInfo().then(res => {\n            setFirstName(res.firstName)\n            setLastName(res.lastName)\n            setLoginValue(res.email)\n            setPhoneValue(res.phone)\n        })\n        return () => { }\n    }, [])\n\n    return (<><PageTitle title=\"Hello\" button={<Button\n        variant=\"contained\"\n        size=\"medium\"\n        color=\"secondary\"\n    >\n        Latest Phones\n        </Button>} />\n\n        <Collapse in={open}>\n            <Alert\n                action={\n                    <IconButton\n                        aria-label=\"close\"\n                        color=\"inherit\"\n                        size=\"small\"\n                        onClick={() => {\n                            setOpen(false);\n                        }}\n                    >\n                        <CloseIcon fontSize=\"inherit\" />\n                    </IconButton>\n                }\n            >\n                Your Info has been updated sucessfully\n        </Alert>\n        </Collapse>\n        <Grid container direction=\"column\" justify=\"center\">\n\n            {error && <Typography color=\"secondary\" className={classes.errorMessage}>\n                Something is wrong with your login or password :(\n          </Typography>}\n            <TextField\n                id=\"userfirstName\"\n                InputProps={{\n                    classes: {\n                        underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                    },\n                }}\n                value={firstName}\n                onChange={e => setFirstName(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"First Name\"\n                type=\"text\"\n            />\n            <TextField\n                id=\"userlastName\"\n                InputProps={{\n                    classes: {\n                        underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                    },\n                }}\n                value={lastName}\n                onChange={e => setLastName(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"LastName\"\n                type=\"text\"\n            />\n            <TextField\n                id=\"userEmail\"\n                InputProps={{\n                    classes: {\n                        underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                    },\n                }}\n                disabled\n\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n            />\n            <TextField\n                id=\"userPhone\"\n                InputProps={{\n                    classes: {\n                        underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                    },\n                }}\n                value={phone}\n                onChange={e => setPhoneValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Phone\"\n                type=\"number\"\n            />\n            <div className={classes.formButtons}>\n                {isLoading ? (\n                    <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                        <Button\n                            disabled={\n                                loginValue.length === 0 ||\n                                firstName.length === 0 || lastName.length === 0\n                            }\n                            onClick={() => updateUser()}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"large\"\n                        >\n                            Update\n                        </Button>\n                    )}\n            </div>\n        </Grid>\n\n    </>)\n\n}","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/users/services/user.service.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/users/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/checkout/checkout.js",["383"],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/checkout/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/checkout/services/order.service.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/checkout/orderplaced.js",["384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411"],"\n\n\nimport React, { useEffect, useState } from 'react'\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\n\n// import { getUserInfo, updateUserInfo } from './services/user.service'\nimport useStyles from \"./styles\";\nimport { Link } from 'react-router-dom';\n\n\nimport {\n    Grid,\n    CircularProgress,\n    Typography,\n    Button,\n    Tabs,\n    Card,\n    List,\n    ListItem,\n    ListItemAvatar,\n    Avatar,\n    ListItemText,\n    Divider,\n    Fab,\n    Tab,\n    TextField,\n    Fade,\n    Collapse,\n    IconButton\n} from \"@material-ui/core\";\n\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\n\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport Delete from '@material-ui/icons/Delete'\n\n\n\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { getCartItems, removeFromCart, setCartQuantity, updateCartQunatityApi } from '../../components/Product/service/cart'\n\n\n\nexport function OrderSuccessPage(props) {\n\n    useEffect(() => {\n        document.title = \"Order Sucess\"\n        return () => {\n            \n        }\n    }, [])\n\n\n    return (<>\n        <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\n\n            <CheckCircleOutlineIcon style={{ color: 'green', fontSize: '200' }} />\n            <Typography variant=\"h2\">THANK YOU!! You order has been placed</Typography>\n            <br></br>\n            <Link to={'/app/dashboard'}><Typography variant=\"h4\">\n                <u>\n                    Go to Products\n                    </u>\n            </Typography></Link>\n        </Grid>\n\n    </>)\n}",{"ruleId":"412","replacedBy":"413"},{"ruleId":"414","replacedBy":"415"},{"ruleId":"416","severity":1,"message":"417","line":16,"column":16,"nodeType":"418","messageId":"419","endLine":16,"endColumn":26},{"ruleId":"416","severity":1,"message":"420","line":4,"column":3,"nodeType":"418","messageId":"419","endLine":4,"endColumn":19},{"ruleId":"416","severity":1,"message":"421","line":6,"column":3,"nodeType":"418","messageId":"419","endLine":6,"endColumn":9},{"ruleId":"416","severity":1,"message":"422","line":10,"column":3,"nodeType":"418","messageId":"419","endLine":10,"endColumn":7},{"ruleId":"416","severity":1,"message":"423","line":3,"column":5,"nodeType":"418","messageId":"419","endLine":3,"endColumn":9},{"ruleId":"416","severity":1,"message":"424","line":7,"column":5,"nodeType":"418","messageId":"419","endLine":7,"endColumn":9},{"ruleId":"416","severity":1,"message":"425","line":8,"column":5,"nodeType":"418","messageId":"419","endLine":8,"endColumn":8},{"ruleId":"416","severity":1,"message":"422","line":10,"column":5,"nodeType":"418","messageId":"419","endLine":10,"endColumn":9},{"ruleId":"416","severity":1,"message":"426","line":13,"column":8,"nodeType":"418","messageId":"419","endLine":13,"endColumn":18},{"ruleId":"416","severity":1,"message":"427","line":21,"column":8,"nodeType":"418","messageId":"419","endLine":21,"endColumn":12},{"ruleId":"416","severity":1,"message":"428","line":22,"column":8,"nodeType":"418","messageId":"419","endLine":22,"endColumn":14},{"ruleId":"416","severity":1,"message":"423","line":3,"column":5,"nodeType":"418","messageId":"419","endLine":3,"endColumn":9},{"ruleId":"416","severity":1,"message":"424","line":7,"column":5,"nodeType":"418","messageId":"419","endLine":7,"endColumn":9},{"ruleId":"416","severity":1,"message":"425","line":8,"column":5,"nodeType":"418","messageId":"419","endLine":8,"endColumn":8},{"ruleId":"416","severity":1,"message":"422","line":10,"column":5,"nodeType":"418","messageId":"419","endLine":10,"endColumn":9},{"ruleId":"416","severity":1,"message":"426","line":13,"column":8,"nodeType":"418","messageId":"419","endLine":13,"endColumn":18},{"ruleId":"416","severity":1,"message":"427","line":23,"column":8,"nodeType":"418","messageId":"419","endLine":23,"endColumn":12},{"ruleId":"416","severity":1,"message":"428","line":24,"column":8,"nodeType":"418","messageId":"419","endLine":24,"endColumn":14},{"ruleId":"416","severity":1,"message":"429","line":4,"column":10,"nodeType":"418","messageId":"419","endLine":4,"endColumn":16},{"ruleId":"416","severity":1,"message":"430","line":4,"column":18,"nodeType":"418","messageId":"419","endLine":4,"endColumn":23},{"ruleId":"416","severity":1,"message":"431","line":8,"column":3,"nodeType":"418","messageId":"419","endLine":8,"endColumn":17},{"ruleId":"416","severity":1,"message":"432","line":9,"column":3,"nodeType":"418","messageId":"419","endLine":9,"endColumn":9},{"ruleId":"416","severity":1,"message":"433","line":10,"column":3,"nodeType":"418","messageId":"419","endLine":10,"endColumn":16},{"ruleId":"416","severity":1,"message":"434","line":11,"column":3,"nodeType":"418","messageId":"419","endLine":11,"endColumn":11},{"ruleId":"416","severity":1,"message":"435","line":21,"column":8,"nodeType":"418","messageId":"419","endLine":21,"endColumn":17},{"ruleId":"416","severity":1,"message":"436","line":4,"column":8,"nodeType":"418","messageId":"419","endLine":4,"endColumn":20},{"ruleId":"416","severity":1,"message":"437","line":12,"column":8,"nodeType":"418","messageId":"419","endLine":12,"endColumn":12},{"ruleId":"416","severity":1,"message":"438","line":16,"column":7,"nodeType":"418","messageId":"419","endLine":16,"endColumn":20},{"ruleId":"416","severity":1,"message":"423","line":2,"column":10,"nodeType":"418","messageId":"419","endLine":2,"endColumn":14},{"ruleId":"416","severity":1,"message":"439","line":4,"column":10,"nodeType":"418","messageId":"419","endLine":4,"endColumn":24},{"ruleId":"416","severity":1,"message":"440","line":5,"column":8,"nodeType":"418","messageId":"419","endLine":5,"endColumn":25},{"ruleId":"416","severity":1,"message":"441","line":6,"column":10,"nodeType":"418","messageId":"419","endLine":6,"endColumn":15},{"ruleId":"416","severity":1,"message":"426","line":7,"column":8,"nodeType":"418","messageId":"419","endLine":7,"endColumn":18},{"ruleId":"416","severity":1,"message":"442","line":14,"column":8,"nodeType":"418","messageId":"419","endLine":14,"endColumn":14},{"ruleId":"416","severity":1,"message":"443","line":17,"column":10,"nodeType":"418","messageId":"419","endLine":17,"endColumn":20},{"ruleId":"416","severity":1,"message":"421","line":17,"column":22,"nodeType":"418","messageId":"419","endLine":17,"endColumn":28},{"ruleId":"416","severity":1,"message":"444","line":340,"column":12,"nodeType":"418","messageId":"419","endLine":340,"endColumn":34},{"ruleId":"416","severity":1,"message":"445","line":384,"column":12,"nodeType":"418","messageId":"419","endLine":384,"endColumn":38},{"ruleId":"416","severity":1,"message":"446","line":390,"column":10,"nodeType":"418","messageId":"419","endLine":390,"endColumn":21},{"ruleId":"416","severity":1,"message":"447","line":6,"column":17,"nodeType":"418","messageId":"419","endLine":6,"endColumn":31},{"ruleId":"416","severity":1,"message":"448","line":7,"column":17,"nodeType":"418","messageId":"419","endLine":7,"endColumn":31},{"ruleId":"416","severity":1,"message":"449","line":23,"column":8,"nodeType":"418","messageId":"419","endLine":23,"endColumn":11},{"ruleId":"450","severity":1,"message":"451","line":143,"column":32,"nodeType":"452","messageId":"453","endLine":143,"endColumn":34},{"ruleId":"450","severity":1,"message":"451","line":143,"column":53,"nodeType":"452","messageId":"453","endLine":143,"endColumn":55},{"ruleId":"416","severity":1,"message":"454","line":12,"column":3,"nodeType":"418","messageId":"419","endLine":12,"endColumn":20},{"ruleId":"416","severity":1,"message":"455","line":34,"column":7,"nodeType":"418","messageId":"419","endLine":34,"endColumn":12},{"ruleId":"416","severity":1,"message":"456","line":45,"column":10,"nodeType":"418","messageId":"419","endLine":45,"endColumn":14},{"ruleId":"416","severity":1,"message":"457","line":68,"column":12,"nodeType":"418","messageId":"419","endLine":68,"endColumn":33},{"ruleId":"416","severity":1,"message":"458","line":203,"column":10,"nodeType":"418","messageId":"419","endLine":203,"endColumn":26},{"ruleId":"416","severity":1,"message":"459","line":8,"column":3,"nodeType":"418","messageId":"419","endLine":8,"endColumn":12},{"ruleId":"416","severity":1,"message":"460","line":19,"column":18,"nodeType":"418","messageId":"419","endLine":19,"endColumn":26},{"ruleId":"416","severity":1,"message":"461","line":20,"column":24,"nodeType":"418","messageId":"419","endLine":20,"endColumn":41},{"ruleId":"416","severity":1,"message":"462","line":22,"column":13,"nodeType":"418","messageId":"419","endLine":22,"endColumn":23},{"ruleId":"416","severity":1,"message":"463","line":46,"column":8,"nodeType":"418","messageId":"419","endLine":46,"endColumn":20},{"ruleId":"416","severity":1,"message":"464","line":55,"column":40,"nodeType":"418","messageId":"419","endLine":55,"endColumn":55},{"ruleId":"416","severity":1,"message":"465","line":97,"column":23,"nodeType":"418","messageId":"419","endLine":97,"endColumn":39},{"ruleId":"416","severity":1,"message":"466","line":99,"column":8,"nodeType":"418","messageId":"419","endLine":99,"endColumn":29},{"ruleId":"416","severity":1,"message":"467","line":99,"column":31,"nodeType":"418","messageId":"419","endLine":99,"endColumn":55},{"ruleId":"416","severity":1,"message":"468","line":101,"column":8,"nodeType":"418","messageId":"419","endLine":101,"endColumn":20},{"ruleId":"416","severity":1,"message":"469","line":101,"column":22,"nodeType":"418","messageId":"419","endLine":101,"endColumn":35},{"ruleId":"416","severity":1,"message":"470","line":103,"column":10,"nodeType":"418","messageId":"419","endLine":103,"endColumn":19},{"ruleId":"471","severity":1,"message":"472","line":150,"column":6,"nodeType":"473","endLine":150,"endColumn":8,"suggestions":"474"},{"ruleId":"416","severity":1,"message":"431","line":7,"column":5,"nodeType":"418","messageId":"419","endLine":7,"endColumn":19},{"ruleId":"416","severity":1,"message":"432","line":8,"column":5,"nodeType":"418","messageId":"419","endLine":8,"endColumn":11},{"ruleId":"416","severity":1,"message":"433","line":9,"column":5,"nodeType":"418","messageId":"419","endLine":9,"endColumn":18},{"ruleId":"416","severity":1,"message":"434","line":10,"column":5,"nodeType":"418","messageId":"419","endLine":10,"endColumn":13},{"ruleId":"416","severity":1,"message":"475","line":12,"column":5,"nodeType":"418","messageId":"419","endLine":12,"endColumn":10},{"ruleId":"416","severity":1,"message":"476","line":18,"column":10,"nodeType":"418","messageId":"419","endLine":18,"endColumn":22},{"ruleId":"416","severity":1,"message":"477","line":22,"column":53,"nodeType":"418","messageId":"419","endLine":22,"endColumn":66},{"ruleId":"416","severity":1,"message":"478","line":29,"column":12,"nodeType":"418","messageId":"419","endLine":29,"endColumn":20},{"ruleId":"416","severity":1,"message":"479","line":29,"column":22,"nodeType":"418","messageId":"419","endLine":29,"endColumn":33},{"ruleId":"416","severity":1,"message":"480","line":36,"column":25,"nodeType":"418","messageId":"419","endLine":36,"endColumn":39},{"ruleId":"481","severity":1,"message":"482","line":44,"column":56,"nodeType":"483","messageId":"484","endLine":44,"endColumn":58},{"ruleId":"481","severity":1,"message":"482","line":44,"column":81,"nodeType":"483","messageId":"484","endLine":44,"endColumn":83},{"ruleId":"481","severity":1,"message":"482","line":54,"column":56,"nodeType":"483","messageId":"484","endLine":54,"endColumn":58},{"ruleId":"481","severity":1,"message":"482","line":54,"column":81,"nodeType":"483","messageId":"484","endLine":54,"endColumn":83},{"ruleId":"416","severity":1,"message":"485","line":104,"column":14,"nodeType":"418","messageId":"419","endLine":104,"endColumn":29},{"ruleId":"471","severity":1,"message":"486","line":129,"column":8,"nodeType":"473","endLine":129,"endColumn":10,"suggestions":"487"},{"ruleId":"481","severity":1,"message":"488","line":146,"column":152,"nodeType":"483","messageId":"484","endLine":146,"endColumn":154},{"ruleId":"481","severity":1,"message":"488","line":152,"column":150,"nodeType":"483","messageId":"484","endLine":152,"endColumn":152},{"ruleId":"489","severity":1,"message":"490","line":163,"column":25,"nodeType":"491","endLine":163,"endColumn":121},{"ruleId":"416","severity":1,"message":"431","line":7,"column":5,"nodeType":"418","messageId":"419","endLine":7,"endColumn":19},{"ruleId":"416","severity":1,"message":"432","line":8,"column":5,"nodeType":"418","messageId":"419","endLine":8,"endColumn":11},{"ruleId":"416","severity":1,"message":"433","line":9,"column":5,"nodeType":"418","messageId":"419","endLine":9,"endColumn":18},{"ruleId":"416","severity":1,"message":"434","line":10,"column":5,"nodeType":"418","messageId":"419","endLine":10,"endColumn":13},{"ruleId":"416","severity":1,"message":"475","line":14,"column":5,"nodeType":"418","messageId":"419","endLine":14,"endColumn":10},{"ruleId":"416","severity":1,"message":"492","line":15,"column":5,"nodeType":"418","messageId":"419","endLine":15,"endColumn":14},{"ruleId":"416","severity":1,"message":"493","line":19,"column":10,"nodeType":"418","messageId":"419","endLine":19,"endColumn":18},{"ruleId":"416","severity":1,"message":"494","line":21,"column":26,"nodeType":"418","messageId":"419","endLine":21,"endColumn":36},{"ruleId":"416","severity":1,"message":"495","line":21,"column":38,"nodeType":"418","messageId":"419","endLine":21,"endColumn":51},{"ruleId":"416","severity":1,"message":"477","line":21,"column":53,"nodeType":"418","messageId":"419","endLine":21,"endColumn":66},{"ruleId":"416","severity":1,"message":"496","line":21,"column":68,"nodeType":"418","messageId":"419","endLine":21,"endColumn":76},{"ruleId":"416","severity":1,"message":"497","line":21,"column":78,"nodeType":"418","messageId":"419","endLine":21,"endColumn":89},{"ruleId":"416","severity":1,"message":"498","line":35,"column":8,"nodeType":"418","messageId":"419","endLine":35,"endColumn":15},{"ruleId":"416","severity":1,"message":"499","line":37,"column":8,"nodeType":"418","messageId":"419","endLine":37,"endColumn":18},{"ruleId":"416","severity":1,"message":"500","line":41,"column":12,"nodeType":"418","messageId":"419","endLine":41,"endColumn":23},{"ruleId":"416","severity":1,"message":"501","line":41,"column":25,"nodeType":"418","messageId":"419","endLine":41,"endColumn":41},{"ruleId":"416","severity":1,"message":"502","line":42,"column":12,"nodeType":"418","messageId":"419","endLine":42,"endColumn":24},{"ruleId":"416","severity":1,"message":"503","line":42,"column":26,"nodeType":"418","messageId":"419","endLine":42,"endColumn":41},{"ruleId":"416","severity":1,"message":"504","line":54,"column":12,"nodeType":"418","messageId":"419","endLine":54,"endColumn":17},{"ruleId":"416","severity":1,"message":"470","line":57,"column":12,"nodeType":"418","messageId":"419","endLine":57,"endColumn":21},{"ruleId":"481","severity":1,"message":"482","line":68,"column":56,"nodeType":"483","messageId":"484","endLine":68,"endColumn":58},{"ruleId":"471","severity":1,"message":"505","line":100,"column":8,"nodeType":"473","endLine":100,"endColumn":10,"suggestions":"506"},{"ruleId":"416","severity":1,"message":"424","line":13,"column":5,"nodeType":"418","messageId":"419","endLine":13,"endColumn":9},{"ruleId":"416","severity":1,"message":"425","line":14,"column":5,"nodeType":"418","messageId":"419","endLine":14,"endColumn":8},{"ruleId":"416","severity":1,"message":"422","line":16,"column":5,"nodeType":"418","messageId":"419","endLine":16,"endColumn":9},{"ruleId":"416","severity":1,"message":"507","line":28,"column":21,"nodeType":"418","messageId":"419","endLine":28,"endColumn":33},{"ruleId":"416","severity":1,"message":"508","line":29,"column":17,"nodeType":"418","messageId":"419","endLine":29,"endColumn":25},{"ruleId":null,"fatal":true,"severity":2,"message":"509"},{"ruleId":"416","severity":1,"message":"510","line":4,"column":28,"nodeType":"418","messageId":"419","endLine":4,"endColumn":36},{"ruleId":"416","severity":1,"message":"511","line":5,"column":8,"nodeType":"418","messageId":"419","endLine":5,"endColumn":17},{"ruleId":"416","severity":1,"message":"512","line":8,"column":8,"nodeType":"418","messageId":"419","endLine":8,"endColumn":17},{"ruleId":"416","severity":1,"message":"420","line":14,"column":5,"nodeType":"418","messageId":"419","endLine":14,"endColumn":21},{"ruleId":"416","severity":1,"message":"421","line":16,"column":5,"nodeType":"418","messageId":"419","endLine":16,"endColumn":11},{"ruleId":"416","severity":1,"message":"424","line":17,"column":5,"nodeType":"418","messageId":"419","endLine":17,"endColumn":9},{"ruleId":"416","severity":1,"message":"513","line":18,"column":5,"nodeType":"418","messageId":"419","endLine":18,"endColumn":9},{"ruleId":"416","severity":1,"message":"514","line":19,"column":5,"nodeType":"418","messageId":"419","endLine":19,"endColumn":9},{"ruleId":"416","severity":1,"message":"515","line":20,"column":5,"nodeType":"418","messageId":"419","endLine":20,"endColumn":13},{"ruleId":"416","severity":1,"message":"516","line":21,"column":5,"nodeType":"418","messageId":"419","endLine":21,"endColumn":19},{"ruleId":"416","severity":1,"message":"517","line":22,"column":5,"nodeType":"418","messageId":"419","endLine":22,"endColumn":11},{"ruleId":"416","severity":1,"message":"518","line":23,"column":5,"nodeType":"418","messageId":"419","endLine":23,"endColumn":17},{"ruleId":"416","severity":1,"message":"519","line":24,"column":5,"nodeType":"418","messageId":"419","endLine":24,"endColumn":12},{"ruleId":"416","severity":1,"message":"520","line":25,"column":5,"nodeType":"418","messageId":"419","endLine":25,"endColumn":8},{"ruleId":"416","severity":1,"message":"425","line":26,"column":5,"nodeType":"418","messageId":"419","endLine":26,"endColumn":8},{"ruleId":"416","severity":1,"message":"492","line":27,"column":5,"nodeType":"418","messageId":"419","endLine":27,"endColumn":14},{"ruleId":"416","severity":1,"message":"422","line":28,"column":5,"nodeType":"418","messageId":"419","endLine":28,"endColumn":9},{"ruleId":"416","severity":1,"message":"521","line":29,"column":5,"nodeType":"418","messageId":"419","endLine":29,"endColumn":13},{"ruleId":"416","severity":1,"message":"522","line":30,"column":5,"nodeType":"418","messageId":"419","endLine":30,"endColumn":15},{"ruleId":"416","severity":1,"message":"523","line":33,"column":8,"nodeType":"418","messageId":"419","endLine":33,"endColumn":19},{"ruleId":"416","severity":1,"message":"524","line":34,"column":8,"nodeType":"418","messageId":"419","endLine":34,"endColumn":20},{"ruleId":"416","severity":1,"message":"525","line":39,"column":8,"nodeType":"418","messageId":"419","endLine":39,"endColumn":13},{"ruleId":"416","severity":1,"message":"526","line":41,"column":8,"nodeType":"418","messageId":"419","endLine":41,"endColumn":14},{"ruleId":"416","severity":1,"message":"527","line":45,"column":8,"nodeType":"418","messageId":"419","endLine":45,"endColumn":17},{"ruleId":"416","severity":1,"message":"528","line":47,"column":10,"nodeType":"418","messageId":"419","endLine":47,"endColumn":22},{"ruleId":"416","severity":1,"message":"529","line":47,"column":24,"nodeType":"418","messageId":"419","endLine":47,"endColumn":38},{"ruleId":"416","severity":1,"message":"464","line":47,"column":40,"nodeType":"418","messageId":"419","endLine":47,"endColumn":55},{"ruleId":"416","severity":1,"message":"530","line":47,"column":57,"nodeType":"418","messageId":"419","endLine":47,"endColumn":78},"no-native-reassign",["531"],"no-negated-in-lhs",["532"],"no-unused-vars","'GithubIcon' is defined but never used.","Identifier","unusedVar","'CircularProgress' is defined but never used.","'Button' is defined but never used.","'Fade' is defined but never used.","'Grid' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'classnames' is defined but never used.","'logo' is defined but never used.","'google' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'LinearProgress' is defined but never used.","'Select' is defined but never used.","'OutlinedInput' is defined but never used.","'MenuItem' is defined but never used.","'InboxIcon' is defined but never used.","'MUIDataTable' is defined but never used.","'mock' is defined but never used.","'datatableData' is assigned a value but never used.","'ToastContainer' is defined but never used.","'SyntaxHighlighter' is defined but never used.","'docco' is defined but never used.","'Widget' is defined but never used.","'Typography' is defined but never used.","'handleNotificationCall' is defined but never used.","'changeNotificationPosition' is defined but never used.","'CloseButton' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'Dot' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'ClickAwayListener' is defined but never used.","'theme' is assigned a value but never used.","'open' is assigned a value but never used.","'getProductswithquesry' is defined but never used.","'getMainChartData' is defined but never used.","'InputBase' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'SearchIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'setCartQuantity' is defined but never used.","'setIsMailsUnread' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'isSearchOpen' is assigned a value but never used.","'setSearchOpen' is assigned a value but never used.","'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userState.isDrawerOpen'. Either include it or remove the dependency array.","ArrayExpression",["533"],"'Input' is defined but never used.","'DropzoneArea' is defined but never used.","'deleteProduct' is defined but never used.","'products' is assigned a value but never used.","'setProducts' is assigned a value but never used.","'setintialFiles' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'onProductRemove' is defined but never used.","React Hook useEffect has a missing dependency: 'mockLoading'. Either include it or remove the dependency array.",["534"],"Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TextField' is defined but never used.","'Skeleton' is defined but never used.","'addProduct' is defined but never used.","'updateProduct' is defined but never used.","'addImage' is defined but never used.","'removeImage' is defined but never used.","'AddIcon' is defined but never used.","'RemoveIcon' is defined but never used.","'addedToCart' is assigned a value but never used.","'setIsAddedToCart' is assigned a value but never used.","'isWishListed' is assigned a value but never used.","'setIsWishListed' is assigned a value but never used.","'stock' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["535"],"'setIsLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","Parsing error: Cannot find module './parse-with-scope'\nRequire stack:\n- /home/tapclicks/Desktop/code/kart/kart-ui/node_modules/babel-eslint/lib/index.js\n- /home/tapclicks/Desktop/code/kart/kart-ui/node_modules/@eslint/eslintrc/lib/config-array-factory.js\n- /home/tapclicks/Desktop/code/kart/kart-ui/node_modules/@eslint/eslintrc/lib/index.js\n- /home/tapclicks/Desktop/code/kart/kart-ui/node_modules/eslint/lib/cli-engine/cli-engine.js\n- /home/tapclicks/Desktop/code/kart/kart-ui/node_modules/eslint/lib/cli-engine/index.js\n- /home/tapclicks/Desktop/code/kart/kart-ui/node_modules/eslint/lib/api.js\n- /home/tapclicks/Desktop/code/kart/kart-ui/node_modules/eslint-webpack-plugin/dist/getESLint.js\n- /home/tapclicks/Desktop/code/kart/kart-ui/node_modules/eslint-webpack-plugin/dist/linter.js\n- /home/tapclicks/Desktop/code/kart/kart-ui/node_modules/eslint-webpack-plugin/dist/index.js\n- /home/tapclicks/Desktop/code/kart/kart-ui/node_modules/eslint-webpack-plugin/dist/cjs.js\n- /home/tapclicks/Desktop/code/kart/kart-ui/node_modules/react-scripts/config/webpack.config.js\n- /home/tapclicks/Desktop/code/kart/kart-ui/node_modules/react-scripts/scripts/start.js","'useState' is defined but never used.","'PageTitle' is defined but never used.","'useStyles' is defined but never used.","'Card' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'ListItemText' is defined but never used.","'Divider' is defined but never used.","'Fab' is defined but never used.","'Collapse' is defined but never used.","'IconButton' is defined but never used.","'AvatarGroup' is defined but never used.","'ListItemIcon' is defined but never used.","'Alert' is defined but never used.","'Delete' is defined but never used.","'CloseIcon' is defined but never used.","'getCartItems' is defined but never used.","'removeFromCart' is defined but never used.","'updateCartQunatityApi' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},"Update the dependencies array to be: [userState.isDrawerOpen]",{"range":"542","text":"543"},"Update the dependencies array to be: [mockLoading]",{"range":"544","text":"545"},"Update the dependencies array to be: [id]",{"range":"546","text":"547"},[3692,3694],"[userState.isDrawerOpen]",[3489,3491],"[mockLoading]",[3041,3043],"[id]"]