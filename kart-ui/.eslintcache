[{"/home/tapclicks/Desktop/code/kart/kart-ui/src/index.js":"1","/home/tapclicks/Desktop/code/kart/kart-ui/src/serviceWorker.js":"2","/home/tapclicks/Desktop/code/kart/kart-ui/src/context/UserContext.js":"3","/home/tapclicks/Desktop/code/kart/kart-ui/src/context/LayoutContext.js":"4","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/App.js":"5","/home/tapclicks/Desktop/code/kart/kart-ui/src/themes/index.js":"6","/home/tapclicks/Desktop/code/kart/kart-ui/src/themes/default.js":"7","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Layout/Layout.js":"8","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/error/Error.js":"9","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/Login.js":"10","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/regPage.js":"11","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/loginPage.js":"12","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/styles.js":"13","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/login.service.js":"14","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/error/styles.js":"15","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Layout/styles.js":"16","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Admin/adminPage.js":"17","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/tables/Tables.js":"18","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/charts/Charts.js":"19","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/notifications/Notifications.js":"20","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/maps/Maps.js":"21","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/icons/Icons.js":"22","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/Sidebar.js":"23","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/typography/Typography.js":"24","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/Dashboard.js":"25","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Header/Header.js":"26","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/mock.js":"27","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/icons/styles.js":"28","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/notifications/styles.js":"29","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/maps/styles.js":"30","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/charts/components/ApexHeatmap.js":"31","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/charts/components/ApexLineChart.js":"32","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Header/styles.js":"33","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/PageTitle/PageTitle.js":"34","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/styles.js":"35","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/components/Table/Table.js":"36","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/components/Dot.js":"37","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/components/BigStat/BigStat.js":"38","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Widget/Widget.js":"39","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Notification/Notification.js":"40","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/typography/styles.js":"41","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/styles.js":"42","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Wrappers/Wrappers.js":"43","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/UserAvatar/UserAvatar.js":"44","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"45","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/PageTitle/styles.js":"46","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/components/BigStat/styles.js":"47","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Widget/styles.js":"48","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Notification/styles.js":"49","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/UserAvatar/styles.js":"50","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/components/SidebarLink/styles.js":"51","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/services/product.service.js":"52","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Admin/services/admin.service.js":"53","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/product.js":"54","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/viewproduct.js":"55","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/image-maginify.js":"56","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/service/cart.js":"57","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/users/user.js":"58","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/users/services/user.service.js":"59","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/users/styles.js":"60","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/checkout/checkout.js":"61","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/checkout/styles.js":"62","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/checkout/services/order.service.js":"63","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/checkout/orderplaced.js":"64","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/support/support.js":"65","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/support/styles.js":"66","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/support/services/statusService.js":"67","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/support/viewSupport.js":"68","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/styles.js":"69","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/support/adminViewSupport.js":"70","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/orders/AdminOrders.js":"71","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/orders/ViewOrder.js":"72"},{"size":1001,"mtime":1621869809692,"results":"73","hashOfConfig":"74"},{"size":4948,"mtime":1618306617000,"results":"75","hashOfConfig":"74"},{"size":3931,"mtime":1622996558541,"results":"76","hashOfConfig":"74"},{"size":1393,"mtime":1622105991981,"results":"77","hashOfConfig":"74"},{"size":1711,"mtime":1621175292285,"results":"78","hashOfConfig":"74"},{"size":502,"mtime":1618306617000,"results":"79","hashOfConfig":"74"},{"size":3018,"mtime":1622946326925,"results":"80","hashOfConfig":"74"},{"size":9653,"mtime":1622962446488,"results":"81","hashOfConfig":"74"},{"size":1571,"mtime":1618306617000,"results":"82","hashOfConfig":"74"},{"size":3748,"mtime":1622945718412,"results":"83","hashOfConfig":"74"},{"size":5197,"mtime":1622996572736,"results":"84","hashOfConfig":"74"},{"size":4105,"mtime":1622945426258,"results":"85","hashOfConfig":"74"},{"size":3133,"mtime":1618306617000,"results":"86","hashOfConfig":"74"},{"size":385,"mtime":1621172934883,"results":"87","hashOfConfig":"74"},{"size":1334,"mtime":1618306617000,"results":"88","hashOfConfig":"74"},{"size":966,"mtime":1622901842388,"results":"89","hashOfConfig":"74"},{"size":2079,"mtime":1622260789566,"results":"90","hashOfConfig":"74"},{"size":2155,"mtime":1622262697572,"results":"91","hashOfConfig":"74"},{"size":5556,"mtime":1618306617000,"results":"92","hashOfConfig":"74"},{"size":13478,"mtime":1621056437043,"results":"93","hashOfConfig":"74"},{"size":971,"mtime":1618306617000,"results":"94","hashOfConfig":"74"},{"size":377833,"mtime":1618306617000,"results":"95","hashOfConfig":"74"},{"size":3904,"mtime":1622996337793,"results":"96","hashOfConfig":"74"},{"size":4506,"mtime":1618306617000,"results":"97","hashOfConfig":"74"},{"size":6447,"mtime":1622997457187,"results":"98","hashOfConfig":"74"},{"size":14642,"mtime":1622996407645,"results":"99","hashOfConfig":"74"},{"size":4105,"mtime":1621056328395,"results":"100","hashOfConfig":"74"},{"size":780,"mtime":1618306617000,"results":"101","hashOfConfig":"74"},{"size":1858,"mtime":1618306617000,"results":"102","hashOfConfig":"74"},{"size":171,"mtime":1618306617000,"results":"103","hashOfConfig":"74"},{"size":1794,"mtime":1618306617000,"results":"104","hashOfConfig":"74"},{"size":1328,"mtime":1618306617000,"results":"105","hashOfConfig":"74"},{"size":3914,"mtime":1622801000206,"results":"106","hashOfConfig":"74"},{"size":427,"mtime":1618306617000,"results":"107","hashOfConfig":"74"},{"size":3155,"mtime":1622788531098,"results":"108","hashOfConfig":"74"},{"size":1615,"mtime":1622987581502,"results":"109","hashOfConfig":"74"},{"size":862,"mtime":1618306617000,"results":"110","hashOfConfig":"74"},{"size":4039,"mtime":1618306617000,"results":"111","hashOfConfig":"112"},{"size":2485,"mtime":1618306617000,"results":"113","hashOfConfig":"74"},{"size":3296,"mtime":1618306617000,"results":"114","hashOfConfig":"74"},{"size":374,"mtime":1618306617000,"results":"115","hashOfConfig":"74"},{"size":1304,"mtime":1618306617000,"results":"116","hashOfConfig":"74"},{"size":3790,"mtime":1618306617000,"results":"117","hashOfConfig":"74"},{"size":593,"mtime":1618306617000,"results":"118","hashOfConfig":"74"},{"size":4411,"mtime":1621866709688,"results":"119","hashOfConfig":"74"},{"size":462,"mtime":1618306617000,"results":"120","hashOfConfig":"74"},{"size":1027,"mtime":1618306617000,"results":"121","hashOfConfig":"112"},{"size":969,"mtime":1618306617000,"results":"122","hashOfConfig":"74"},{"size":993,"mtime":1618306617000,"results":"123","hashOfConfig":"74"},{"size":276,"mtime":1618306617000,"results":"124","hashOfConfig":"74"},{"size":1412,"mtime":1618306617000,"results":"125","hashOfConfig":"74"},{"size":616,"mtime":1622104559613,"results":"126","hashOfConfig":"74"},{"size":1434,"mtime":1622209775971,"results":"127","hashOfConfig":"74"},{"size":8753,"mtime":1622997525931,"results":"128","hashOfConfig":"74"},{"size":5701,"mtime":1622903449227,"results":"129","hashOfConfig":"74"},{"size":750,"mtime":1621941763007,"results":"130","hashOfConfig":"112"},{"size":1045,"mtime":1622218859239,"results":"131","hashOfConfig":"74"},{"size":5446,"mtime":1622788096645,"results":"132","hashOfConfig":"74"},{"size":350,"mtime":1622090214042,"results":"133","hashOfConfig":"74"},{"size":3133,"mtime":1622088582096,"results":"134","hashOfConfig":"74"},{"size":19003,"mtime":1622903155187,"results":"135","hashOfConfig":"74"},{"size":3133,"mtime":1622122091050,"results":"136","hashOfConfig":"74"},{"size":853,"mtime":1622979080763,"results":"137","hashOfConfig":"74"},{"size":1672,"mtime":1622287490814,"results":"138","hashOfConfig":"74"},{"size":5606,"mtime":1622905153815,"results":"139","hashOfConfig":"74"},{"size":2364,"mtime":1622906742600,"results":"140","hashOfConfig":"74"},{"size":1746,"mtime":1622813661564,"results":"141","hashOfConfig":"74"},{"size":5320,"mtime":1622991199472,"results":"142","hashOfConfig":"74"},{"size":283,"mtime":1622903329184,"results":"143","hashOfConfig":"74"},{"size":4448,"mtime":1622905572864,"results":"144","hashOfConfig":"74"},{"size":2483,"mtime":1622987667395,"results":"145","hashOfConfig":"74"},{"size":6660,"mtime":1622987780627,"results":"146","hashOfConfig":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},"vymt4y",{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"149"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"149"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"149"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"149"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"149"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"149"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qabce4",{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"149"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"149"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"149"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"149"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"149"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"149"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"149"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"149"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"149"},"/home/tapclicks/Desktop/code/kart/kart-ui/src/index.js",[],["307","308"],"/home/tapclicks/Desktop/code/kart/kart-ui/src/serviceWorker.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/context/UserContext.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/context/LayoutContext.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/App.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/themes/index.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/themes/default.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Layout/Layout.js",["309"],"import React from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { Box, Divider, IconButton, Link, Typography as TEST } from '@material-ui/core'\nimport Icon from '@mdi/react'\n\n//icons\nimport {\n  mdiFacebook as FacebookIcon,\n  mdiTwitter as TwitterIcon,\n  mdiYoutube as YoutubeIcon,\n  mdiInstagram as InstagramIcon\n} from '@mdi/js'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// pages\nimport Dashboard from \"../../pages/dashboard\";\nimport Typography from \"../../pages/typography\";\nimport Notifications from \"../../pages/notifications\";\nimport Maps from \"../../pages/maps\";\nimport Tables from \"../../pages/tables\";\nimport Icons from \"../../pages/icons\";\nimport Charts from \"../../pages/charts\";\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\nimport Admin from \"../Admin/adminPage\";\nimport ProductCreateAndEdit from \"../Product/product\";\nimport ViewProduct from \"../Product/viewproduct\";\nimport { UserPage } from \"../../pages/users/user\";\nimport { CheckoutPage } from '../../pages/checkout/checkout'\nimport { OrderSuccessPage } from '../../pages/checkout/orderplaced'\nimport { SupportPage } from \"../../pages/support/support\";\nimport { VeiwSupportPage } from \"../../pages/support/viewSupport\";\nimport { AdminSupportPage } from \"../../pages/support/adminViewSupport\";\nimport { AdminOrders } from \"../../pages/orders/AdminOrders\";\nimport { ViewOrder } from \"../../pages/orders/ViewOrder\";\n\n\n\nfunction Layout(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n      <>\n        <Header history={props.history} />\n        <Sidebar />\n        <div\n          className={classnames(classes.content, {\n            [classes.contentShift]: layoutState.isSidebarOpened,\n          })}\n        >\n          <div className={classes.fakeToolbar} />\n          <Switch>\n            <Route path=\"/app/dashboard\" component={Dashboard} />\n            <Route path=\"/app/typography\" component={Typography} />\n            <Route path=\"/app/my-orders\" component={Tables} />\n            <Route path=\"/app/admin\" component={Admin} />\n            <Route path=\"/app/product/create\" component={() => <ProductCreateAndEdit isEdit={false} />} />\n            <Route path=\"/app/product/edit/:id\" component={() => <ProductCreateAndEdit isEdit={true} />} />\n\n            <Route path=\"/app/product/view/:id\" component={ViewProduct} />\n            <Route path=\"/app/user/edit\" component={UserPage} />\n            <Route path=\"/app/checkout\" component={CheckoutPage} />\n            <Route path=\"/app/support\" component={SupportPage} />\n            <Route path=\"/app/support-view/:id\" component={VeiwSupportPage} />\n            <Route path=\"/app/support-admin\" component={AdminSupportPage} />\n            <Route path=\"/app/orders-admin\" component={AdminOrders} />\n            <Route path=\"/app/order-view/:id\" component={ViewOrder} />\n\n\n\n            \n\n\n            <Route path=\"/app/order/sucess\" component={OrderSuccessPage} />\n            <Route\n              exact\n              path=\"/app/ui\"\n              render={() => <Redirect to=\"/app/ui/icons\" />}\n            />\n            <Route path=\"/app/ui/maps\" component={Maps} />\n            <Route path=\"/app/ui/icons\" component={Icons} />\n            <Route path=\"/app/ui/charts\" component={Charts} />\n\n          </Switch>\n          <Box\n            mt={5}\n            width={\"100%\"}\n            display={\"flex\"}\n            className={classes.foot}\n            style={{ marginTop: '120px'}}\n            alignItems={\"center\"}\n            justifyContent=\"space-around\"\n          >\n\n            <div>\n              <TEST variant=\"h5\" >Company</TEST>\n              <br></br>\n            <Box mt={1}>\n                <Link\n                  color={'primary'}\n                  href={'#'}\n                  className={classes.link}\n                >\n                 Contact Us\n                </Link>\n              </Box>\n              <Box mt={1}>\n                <Link\n                  color={'primary'}\n                  href={'#'}\n                  className={classes.link}\n                >\n                  About us\n                </Link>\n              </Box>\n              <Box mt={1}>\n                <Link\n                  color={'primary'}\n                  href={'#'}\n                  className={classes.link}\n                >\n                  Careers\n                </Link>\n              </Box>\n              <Box mt={1}>\n                <Link\n                color={'primary'}\n                href={'#'}\n                className={classes.link}\n                >\n                  Stories\n                </Link>\n              </Box>\n\n            </div>\n\n            <div>\n            <TEST variant=\"h5\" >Help & Support</TEST>\n          <br></br>\n            <Box mt={1}>\n                <Link\n                   color={'primary'}\n                   to=\"/app/support\"\n                   className={classes.link}\n                >\n                  Support\n                </Link>\n              </Box>\n              <Box mt={1}>\n              <Link\n                   color={'primary'}\n                   to=\"/app/support\"\n                   className={classes.link}\n                >\n                  Payments\n                </Link>\n              </Box>\n              <Box mt={1}>\n              <Link\n                   color={'primary'}\n                   to=\"/app/support\"\n                   className={classes.link}\n                >\n                  Shipment\n                </Link>\n              </Box>\n              <Box mt={1}>\n              <Link\n                   color={'primary'}\n                   to=\"/app/support\"\n                   className={classes.link}\n                >\n                  Cancellations and Returns\n                </Link>\n              </Box>\n\n            </div>\n            <div>\n            <TEST variant=\"h5\" >Policy</TEST>\n            <br></br>\n            <Box mt={1}>\n            <Link\n                   color={'primary'}\n                   to=\"/app/support\"\n                   className={classes.link}\n                >\n                  Return Policy\n                </Link>\n              </Box>\n              <Box mt={1}>\n              <Link\n                   color={'primary'}\n                   to=\"/app/support\"\n                   className={classes.link}\n                >\n                  Terms of Use\n                </Link>\n              </Box>\n              <Box mt={1}>\n              <Link\n                   color={'primary'}\n                   to=\"/app/support\"\n                   className={classes.link}\n                >\n                 Security\n                </Link>\n              </Box>\n              <Box mt={1}>\n              <Link\n                   color={'primary'}\n                   to=\"/app/support\"\n                   className={classes.link}\n                >\n                  Sitemap\n                </Link>\n              </Box>\n\n            </div>\n            <div>\n              <Link\n                href={'https://www.facebook.com'}\n                target={'_blank'}\n              >\n                <IconButton aria-label=\"facebook\">\n                  <Icon\n                    path={FacebookIcon}\n                    size={1}\n                    color=\"#6E6E6E99\"\n                  />\n                </IconButton>\n              </Link>\n              <Link\n                href={'https://twitter.com'}\n                target={'_blank'}\n              >\n                <IconButton aria-label=\"twitter\">\n                  <Icon\n                    path={TwitterIcon}\n                    size={1}\n                    color=\"#6E6E6E99\"\n                  />\n                </IconButton>\n              </Link>\n              <Link\n                href={'https://instagram.com'}\n                target={'_blank'}\n              >\n                <IconButton aria-label=\"insta\">\n                  <Icon\n                    path={InstagramIcon}\n                    size={1}\n                    color=\"#6E6E6E99\"\n                  />\n                </IconButton>\n              </Link>\n              <Link\n                href={'https://instagram.com'}\n                target={'_blank'}\n              >\n                <IconButton aria-label=\"insta\">\n                  <Icon\n                    path={YoutubeIcon}\n                    size={1}\n                    color=\"#6E6E6E99\"\n                  />\n                </IconButton>\n              </Link>\n              \n              {/* <Link\n                  href={'https://github.com/flatlogic'}\n                  target={'_blank'}\n                >\n                  <IconButton\n                    aria-label=\"github\"\n                    style={{marginRight: -12}}\n                  >\n                    <Icon\n                      path={GithubIcon}\n                      size={1}\n                      color=\"#6E6E6E99\"\n                    />\n                  </IconButton>\n                </Link> */}\n            </div>\n          </Box>\n          <Divider />\n          <Box\n            mt={5}\n            width={\"100%\"}\n            display={\"flex\"}\n            style={{marginTop: '0px !important'}}\n            className={classes.foot1}\n            alignItems={\"center\"}\n            justifyContent=\"space-around\"\n          >\n            © 2021 Mobi Store, all rights reserved. Made with love  for a better web.\n          </Box>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/error/Error.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/Login.js",["310","311"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n// import classnames from \"classnames\";\n\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\n\n// styles\nimport useStyles from \"./styles\";\n\nimport LoginPage from './loginPage'\n\nimport RegPage from './regPage'\n\n// logo\nimport logo from \"./logo.svg\";\n// import google from \"../../images/google.svg\";\n\n// context\n// import { useUserDispatch, loginUser, registerUser } from \"../../context/UserContext\";\nimport Snackbar from '@material-ui/core/Snackbar';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction Login(props) {\n\n  var classes = useStyles();\n  const [isForgotPassword, setisForgotPassword] = useState(false)\n\n  // global\n  // var userDispatch = useUserDispatch();\n\n  // local\n  var [activeTabId, setActiveTabId] = useState(0);\n\n  var [forgotEmail, setforgotEmail] = useState('');\n  const [state, setState] = useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n  });\n  const { vertical, horizontal, open } = state;\n\n\n\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotypeContainer}>\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\n        <Typography className={classes.logotypeText}>Mobi Store</Typography>\n      </div>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n\n          {!isForgotPassword && <><Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered>\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\n          </Tabs>{activeTabId === 0 ? <LoginPage setPassword={setisForgotPassword} /> : <RegPage />}\n\n          </>}\n          <Snackbar\n            anchorOrigin={{ vertical, horizontal }}\n            open={open}\n            onClose={() => setState({ ...state, open: false })}\n            key={vertical + horizontal}\n          ><Alert severity=\"success\">\n              Email has been sent, Please check\n          </Alert>\n          </Snackbar>\n\n          {isForgotPassword && <Grid>\n\n            <Typography variant=\"h4\">Forgot Password</Typography>\n            <br></br>\n            <TextField type=\"email\"\n              variant=\"filled\"\n              autoFocus\n              value={forgotEmail}\n              label=\"Enter Your Email\"\n              onChange={(e) => setforgotEmail(e.target.value)}\n              placeholder=\"Enter your Email\"\n              helperText=\"You will get an email with Password reset link\"\n\n\n            ></TextField>\n            <br></br>\n            <br></br>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => { setisForgotPassword(false); setforgotEmail(\"\"); setState({ ...state, open: true }) }} disabled={!forgotEmail}>Get Link</Button>\n            <br></br>\n            <br></br>\n\n            <Button variant=\"text\"\n              size=\"large\"\n              className={classes.forgetButton}\n\n              onClick={() => setisForgotPassword(false)}\n              color=\"primary\" >Back to Login</Button>\n\n          </Grid>}\n        </div>\n        <Typography color=\"primary\" className={classes.copyright}>\n          © 2021 <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://google.com\" rel=\"noopener noreferrer\" target=\"_blank\">Mobi Store</a>, LLC. All rights reserved.\n        </Typography>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/regPage.js",["312","313","314","315","316","317","318"],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/loginPage.js",["319","320","321","322","323","324","325"],"import React, { useEffect, useState } from \"react\";\nimport {\n    Grid,\n    CircularProgress,\n    Typography,\n    Button,\n    Tabs,\n    Tab,\n    TextField,\n    Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\nimport { login } from './login.service'\nimport { useUserDispatch } from \"../../context/UserContext\";\n\n// styles\nimport useStyles from \"./styles\";\n// var userDispatch = useUserDispatch();\n\n// logo\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\";\n\nfunction LoginPage(props) {\n    var classes = useStyles();\n    const dispatch = useUserDispatch()\n\n    var [isLoading, setIsLoading] = useState(false);\n    var [error, setError] = useState(null);\n    var [loginValue, setLoginValue] = useState(\"\");\n    var [passwordValue, setPasswordValue] = useState(\"\");\n\n    function loginUser() {\n        setIsLoading(true);\n        login(loginValue, passwordValue).then(res => {\n            if (res.data) {\n                localStorage.setItem('id_token', res.data.accessToken);\n                localStorage.setItem('role', res.data.role);\n                localStorage.setItem('name', res.data.name);\n                dispatch({ type: 'LOGIN_SUCCESS', role: res.data.role, name: res.data.name })\n                props.history.push('/app/dashboard')\n            }\n            setError(null)\n            setIsLoading(false)\n        }).catch(err => {\n            setError(true)\n            setIsLoading(false)\n        })\n    }\n\n    useEffect(()=>{\n        document.title = \"Login\"\n    })\n\n    return (<React.Fragment>\n        <Typography variant=\"h1\" className={classes.greeting}>\n            Welcome!  Login\n        </Typography>\n        {error && <Typography color=\"secondary\" className={classes.errorMessage}>\n            <ul>\n                <li>\n                    Inavlid Credentials\n                </li>\n                <li>\n                    Password 8 character\n                </li>\n            </ul>\n        </Typography>}\n        <TextField\n            id=\"email\"\n            autoFocus\n            InputProps={{\n                classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                },\n            }}\n            value={loginValue}\n            onChange={e => setLoginValue(e.target.value)}\n            margin=\"normal\"\n            helperText=\"*Enter your Email to login\"\n            placeholder=\"Email Adress\"\n            type=\"email\"\n            fullWidth\n        />\n        <br></br>\n\n        <TextField\n            id=\"password\"\n            InputProps={{\n                classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                },\n            }}\n            value={passwordValue}\n            onChange={e => setPasswordValue(e.target.value)}\n            margin=\"normal\"\n            helperText=\"*Password is atleast 8 character\"\n            placeholder=\"Password\"\n            type=\"password\"\n            fullWidth\n        />\n        <div className={classes.formButtons}>\n            {isLoading ? (\n                <CircularProgress size={26} className={classes.loginLoader} />\n            ) : (\n                    <Button\n                id=\"loignBtn\"\n\n                        disabled={\n                            loginValue.length === 0 || passwordValue.length === 0\n                        }\n                        onClick={() =>\n                            loginUser()\n                        }\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                    >\n                        Login\n                    </Button>\n                )}\n            <Button\n                color=\"primary\"\n                size=\"large\"\n                onClick={()=>props.setPassword(true)}\n                className={classes.forgetButton}\n            >\n                Forget Password\n          </Button>\n        </div>\n    </React.Fragment>)\n}\n\nexport default withRouter(LoginPage)","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/login/login.service.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/error/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Layout/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Admin/adminPage.js",["326","327","328","329","330","331","332"],"\n\nimport React, { useState, useEffect } from \"react\";\nimport { Router, Route, Link } from 'react-router-dom';\n\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button,\n  Typography\n} from \"@material-ui/core\";\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/Inbox';\n\nimport { getMyProducts } from './services/admin.service'\n\nimport PageTitle from \"../../components/PageTitle\";\nimport Avatar from '@material-ui/core/Avatar';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\n\nexport default function Admin(props) {\n\n  const [products, setProducts] = useState([]);\n\n  const [isLoading, setisLoading] = useState(true);\n\n  useEffect(() => {\n    getMyProducts().then(res => {\n      setProducts(res);\n      setisLoading(false)\n    })\n    return () => { }\n  }, [])\n\n  return <>\n    <PageTitle title=\"My Products\" button={<Link to=\"/app/product/create\" style={{ textDecoration: 'none' }}><Button\n      variant=\"contained\"\n      size=\"medium\"\n      color=\"secondary\"\n    >\n      Add new\n      </Button> </Link>} />\n    {!isLoading && <Grid><List component=\"nav\" aria-label=\"main mailbox folders\">\n      {products.map(product => <><Link to={'/app/product/edit/' + product.id} style={{ textDecoration: 'none' }} key={product.id}><ListItem button >\n        <ListItemIcon>\n          <AvatarGroup max={2}>\n            {product.images.map(image => <Avatar alt=\"Remy Sharp\" src={'http://localhost:5000/' + image.path} />)}\n          </AvatarGroup>\n        </ListItemIcon>\n        <ListItemText style={{ margin: '0 40px' }} primary={product.name} secondary={<React.Fragment>\n          <Typography variant=\"subtitle2\">{'$ ' + product.prize} {', Stock:'+ product.stock}</Typography>\n        </React.Fragment>} />\n      </ListItem>\n        <Divider />\n      </Link>\n      </>)}\n    </List>\n    </Grid>}\n  </>\n}\n","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/tables/Tables.js",["333","334","335"],"import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MUIDataTable from \"mui-datatables\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport Table from \"../dashboard/components/Table/Table\";\n\n// data\nimport mock from \"../dashboard/mock\";\n\nimport { getOrders } from \"../checkout/services/order.service\";\n\nconst datatableData = [\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Pending\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Pending\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Delivered\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Delivered\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Delivered\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Delivered\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Delivered\"],\n  [\"Iphone 8\", \"Apple Inc.\", \"900$\", \"Delivered\"],\n  [\"Acer Laptop\", \"Apple Inc.\", \"1500$\", \"Delivered\"],\n  [\"Iphone Charger\", \"Apple Inc.\", \"100$\", \"Delivered\"],\n];\n\nconst useStyles = makeStyles(theme => ({\n  tableOverflow: {\n    overflow: 'auto'\n  }\n}))\n\nexport default function Tables() {\n  const classes = useStyles();\n\n  const [orders, setorders] = useState([])\n\n  useEffect(() => {\n    getOrders().then(res => {\n      setorders(res)\n    })\n    return () => {\n\n    }\n  }, [])\n\n\n  return (\n    <>\n      <PageTitle title=\"Orders\" />\n      <Grid container spacing={4}>\n        {/* <Grid item xs={12}>\n          <MUIDataTable\n            title=\"Employee List\"\n            data={datatableData}\n            columns={[\"Item\", \"Brand\", \"Price\", \"Status\"]}\n            options={{\n              filterType: \"checkbox\",\n            }}\n          />\n        </Grid> */}\n\n        <Grid item xs={12}>\n          <Widget title=\"Previous Orders\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n            <Table data={orders} />\n          </Widget>\n      </Grid>\n      {/* <Grid item xs={12}>\n        <Widget title=\"Previous Orders\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n          <Table data={mock.table} />\n        </Widget>\n      </Grid> */}\n    </Grid>\n    </>\n  );\n}\n","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/charts/Charts.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/notifications/Notifications.js",["336","337","338","339","340","341","342","343","344","345","346"],"import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport classnames from \"classnames\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Notification from \"../../components/Notification\";\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\nexport default function NotificationsPage(props) {\n  var classes = useStyles();\n\n  // local\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  var [errorToastId, setErrorToastId] = useState(null);\n\n  return (\n    <>\n      <PageTitle title=\"Notifications\" />\n      {/* <Grid container spacing={4}>\n        <ToastContainer\n          className={classes.toastsContainer}\n          closeButton={\n            <CloseButton className={classes.notificationCloseButton} />\n          }\n          closeOnClick={false}\n          progressClassName={classes.notificationProgress}\n        />\n        <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n          <Grid container item xs={12}>\n          <Grid item xs={4}>\n          <Widget title=\"Layout Options\" noWidgetShadow disableWidgetMenu noBodyPadding noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n            <Typography>\n              There are few position options available for notifications. You\n              can click any of them to change notifications position:\n            </Typography>\n            <div className={classes.layoutContainer}>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(0)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 0,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(1)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 1,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(2)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 2,\n                  })}\n                />\n              </div>\n              <Typography className={classes.layoutText} size=\"md\">\n                Click any position\n              </Typography>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(3)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 3,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(4)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 4,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(5)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 5,\n                  })}\n                />\n              </div>\n            </div>\n          </Widget>\n            </Grid>\n            <Grid item xs={4}>\n          <Widget title=\"Notifications Types\" disableWidgetMenu noBodyPadding noWidgetShadow noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n            <Typography>\n              Different types of notifications for lost of use cases. Custom\n              classes are also supported.\n            </Typography>\n            <div className={classes.buttonsContainer}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => handleNotificationCall(\"info\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Info Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => handleNotificationCall(\"error\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Error + Retry Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                onClick={() => handleNotificationCall(\"success\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Success Message\n              </Button>\n            </div>\n          </Widget>\n            </Grid>\n            <Grid item xs={4}>\n          <Widget title=\"Usage\" disableWidgetMenu noBodyPadding noWidgetShadow noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n            <Typography>\n              Notifications are created with the help of{\" \"}\n              <a href=\"https://github.com/fkhadra/react-toastify\">\n                react-toastify\n              </a>\n            </Typography>\n            <div className={classes.codeContainer}>\n              <SyntaxHighlighter\n                className={classes.codeComponent}\n                language=\"javascript\"\n                style={docco}\n              >{`\n  // import needed components, functions and styles\n  import { ToastContainer, toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\n\n  const Page = () => {\n    <div>\n      <ToastContainer />\n      <button onClick={() => toast('Toast Message')}>\n        show notification\n      </button>\n    </div>\n  };\n            `}</SyntaxHighlighter>\n              <Typography variant=\"caption\">\n                For more API information refer to the library documentation\n              </Typography>\n            </div>\n          </Widget>\n            </Grid>\n          </Grid>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"message\"\n              message=\"Thanks for Checking out Messenger\"\n              variant=\"contained\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"customer\"\n              message=\"New customer is registered\"\n              variant=\"contained\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"shipped\"\n              message=\"The order was shipped\"\n              variant=\"contained\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"delivered\"\n              message=\"The order was delivered\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"defence\"\n              message=\"5 Defence alerts\"\n              variant=\"contained\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              variant=\"rounded\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              variant=\"rounded\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              variant=\"rounded\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              variant=\"rounded\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n      </Grid> */}\n    </>\n  );\n\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\",\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\",\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\",\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Message was not sent!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification,\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was shipped\",\n          variant: \"contained\",\n          color: \"success\",\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n}\n\n// #############################################################\nfunction CloseButton({ closeToast, className }) {\n  return <CloseIcon className={className} onClick={closeToast} />;\n}\n","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/maps/Maps.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/icons/Icons.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/Sidebar.js",["347","348","349","350"],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/typography/Typography.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/Dashboard.js",["351","352","353","354","355"],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Header/Header.js",["356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371"],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/mock.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/icons/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/notifications/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/maps/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/charts/components/ApexHeatmap.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/charts/components/ApexLineChart.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Header/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/PageTitle/PageTitle.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/components/Table/Table.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/components/Dot.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/components/BigStat/BigStat.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Widget/Widget.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Notification/Notification.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/typography/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Wrappers/Wrappers.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/UserAvatar/UserAvatar.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/PageTitle/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/components/BigStat/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Widget/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Notification/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/UserAvatar/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Sidebar/components/SidebarLink/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/dashboard/services/product.service.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Admin/services/admin.service.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/product.js",["372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389"],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/viewproduct.js",["390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412"],"\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport {\n    Grid,\n    LinearProgress,\n    Select,\n    OutlinedInput,\n    MenuItem,\n    Typography,\n    Card,\n    Button,\n    Input,\n    TextField,\n    Box,\n    IconButton\n} from \"@material-ui/core\";\nimport { Skeleton } from '@material-ui/lab';\n\nimport { getProductInfo, addProduct, updateProduct, deleteProduct, addImage, removeImage } from \"../Admin/services/admin.service\";\nimport PageTitle from \"../../components/PageTitle\";\nimport \"react-image-gallery/styles/css/image-gallery.css\";\n\nimport ImageGallery from 'react-image-gallery';\n\nimport { addToCart as addToCartApi, getProductCartInfo, updateCartQunatityApi } from './service/cart'\n\n// import MyReactImageMagnify from './image-maginify'\nimport { useHistory } from 'react-router-dom';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\n\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\nimport useStyles from \"./styles\";\n\nimport AddIcon from '@material-ui/icons/Add';\n\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nexport default function ViewProduct(props) {\n\n    const classes = useStyles()\n\n    const [addedToCart, setIsAddedToCart] = useState(false);\n    const [isWishListed, setIsWishListed] = useState(false);\n    const [cartId, setcartId] = useState();\n    const [cartQuantity, setCartQuantity] = useState();\n\n    const history = useHistory()\n\n\n\n    let { id } = useParams();\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [prize, setPrize] = useState()\n    const [stock, setStock] = useState()\n    const [images, setImages] = useState([])\n\n    const [isLoading, setisLoading] = useState(false);\n\n    function addToCart() {\n        addToCartApi({ quantity: 1, product: parseInt(id) }).then(res => {\n            setCartQuantity(1)\n            setcartId(res.id)\n        })\n    }\n\n    function updateQuantity(type) {\n        setisLoading(true)\n        updateCartQunatityApi(cartId, { quantity: type == 'ADD' ? cartQuantity + 1 : cartQuantity - 1 }).then(res => {\n            setCartQuantity(res.quantity)\n            setcartId(res.id)\n            setisLoading(false)\n\n        })\n    }\n\n    useEffect(() => {\n        if (id) {\n            getProductInfo(id).then(res => {\n                setisLoading(false)\n                setName(res.name)\n                setDescription(res.description)\n                setPrize(res.prize);\n                setStock(res.stock);\n                setImages(res.images.map(image => {\n                    return {\n                        thumbnail: `http://localhost:5000/${image.path}`,\n                        original: `http://localhost:5000/${image.path}`\n                    }\n                }\n                ))\n            })\n            getProductCartInfo(id).then(re => {\n                if (re) {\n                    setCartQuantity(re.quantity);\n                    setcartId(re.id)\n                }\n            })\n        }\n        return () => { }\n    }, [])\n\n    return <>\n        <PageTitle title={name} />\n        <Card style={{padding: '30px'}}>\n            <Grid container spacing={2} justify=\"space-around\" direction=\"row\"\n                alignItems=\"center\"\n            >\n                <Grid item spacing={1}>\n                    <ImageGallery items={images} showPlayButton={false} />\n                </Grid>\n                <Grid item spacing={1}>\n                    <Typography variant=\"h6\">{name}</Typography>\n                    <br></br>\n                    <Typography variant=\"subtitle2\">{description}</Typography>\n                    <br></br>\n                    <br></br>\n                    <Typography variant=\"h4\">$ {prize}</Typography>\n                    <br></br>\n                    {!cartId && <Button variant=\"contained\"\n                        size=\"large\"\n                        onClick={() => addToCart()}\n                        style={{ margin: '50px' }}\n                        color=\"secondary\">Add to Cart</Button>}\n\n                    {cartId && <Box >\n                        <IconButton onClick={() => updateQuantity('REMOVE')}>\n                            <RemoveCircleOutlineOutlinedIcon />\n                        </IconButton>\n                        <span style={{ margin: '0 10px' }} variant=\"h6\">\n                            <strong>\n                                {cartQuantity}\n                            </strong>\n                        </span>\n                        <IconButton onClick={() => updateQuantity('ADD')}>\n                            <AddCircleOutlineOutlinedIcon /></IconButton>\n                        <br></br>\n                        <br></br>\n                        <Button\n                            variant=\"contained\"\n                            size=\"medium\"\n                            color=\"secondary\"\n                            onClick={() => history.push('/app/checkout')}\n                        >\n                            Check Out\n                                </Button>\n\n                    </Box>}\n\n                </Grid>\n\n                {/* https://codesandbox.io/s/xenodochial-rosalind-g9ve4?file=/src/MyImageGallery.js */}\n            </Grid>\n            {/* <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            {!isLoading && <Button variant=\"contained\"\n                size=\"large\"\n                style={{ margin: '50px' }}\n                color=\"secondary\">{id ? 'update' : 'Add'}</Button>}\n\n            {isLoading && <Skeleton variant=\"rect\" width={130} height={48} />}\n        </Grid> */}\n        </Card>\n\n    </>\n}\n","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/image-maginify.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/service/cart.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/users/user.js",["413","414","415","416","417"],"\nimport React, { useEffect, useState } from 'react'\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\n\nimport { getUserInfo, updateUserInfo } from './services/user.service'\nimport useStyles from \"./styles\";\n\nimport {\n    Grid,\n    CircularProgress,\n    Typography,\n    Button,\n    Tabs,\n    Tab,\n    TextField,\n    Fade,\n    Collapse,\n    IconButton\n} from \"@material-ui/core\";\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useUserDispatch } from \"../../context/UserContext\";\n\n\n\nexport function UserPage(props) {\n    var dispatch = useUserDispatch()\n    var classes = useStyles();\n    var [isLoading, setIsLoading] = useState(false);\n    var [error, setError] = useState(null);\n    var [firstName, setFirstName] = useState(\"\");\n    var [lastName, setLastName] = useState(\"\");\n    var [loginValue, setLoginValue] = useState(\"\");\n    var [phone, setPhoneValue] = useState(\"\");\n    const [open, setOpen] = useState(false);\n\n    function updateUser() {\n        let postData = {}\n        if (phone) {\n            postData = { firstName, lastName, phone }\n        }\n        else {\n            postData = { firstName, lastName }\n\n        }\n        updateUserInfo(postData).then(re => {\n            setOpen(true);\n            localStorage.setItem('name', re.firstName + ' ' + re.lastName)\n            dispatch({ type: 'LOGIN_SUCCESS', name: re.firstName + ' ' + re.lastName });\n        })\n    }\n\n\n    useEffect(() => {\n        getUserInfo().then(res => {\n            setFirstName(res.firstName)\n            setLastName(res.lastName)\n            setLoginValue(res.email)\n            setPhoneValue(res.phone)\n        })\n        return () => { }\n    }, [])\n\n    return (<><PageTitle title=\"Hello\" button={<Button\n        variant=\"contained\"\n        size=\"medium\"\n        color=\"secondary\"\n    >\n        Latest Phones\n        </Button>} />\n\n        <Collapse in={open}>\n            <Alert\n                action={\n                    <IconButton\n                        aria-label=\"close\"\n                        color=\"inherit\"\n                        size=\"small\"\n                        onClick={() => {\n                            setOpen(false);\n                        }}\n                    >\n                        <CloseIcon fontSize=\"inherit\" />\n                    </IconButton>\n                }\n            >\n                Your Info has been updated sucessfully\n        </Alert>\n        </Collapse>\n        <Grid container direction=\"column\" justify=\"center\">\n\n            {error && <Typography color=\"secondary\" className={classes.errorMessage}>\n                Something is wrong with your login or password :(\n          </Typography>}\n            <TextField\n                id=\"userfirstName\"\n                InputProps={{\n                    classes: {\n                        underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                    },\n                }}\n                value={firstName}\n                onChange={e => setFirstName(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"First Name\"\n                type=\"text\"\n            />\n            <TextField\n                id=\"userlastName\"\n                InputProps={{\n                    classes: {\n                        underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                    },\n                }}\n                value={lastName}\n                onChange={e => setLastName(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"LastName\"\n                type=\"text\"\n            />\n            <TextField\n                id=\"userEmail\"\n                InputProps={{\n                    classes: {\n                        underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                    },\n                }}\n                disabled\n\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n            />\n            <TextField\n                id=\"userPhone\"\n                InputProps={{\n                    classes: {\n                        underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                    },\n                }}\n                value={phone}\n                onChange={e => setPhoneValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Phone\"\n                type=\"number\"\n            />\n            <div className={classes.formButtons}>\n                {isLoading ? (\n                    <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                        <Button\n                            disabled={\n                                loginValue.length === 0 ||\n                                firstName.length === 0 || lastName.length === 0\n                            }\n                            onClick={() => updateUser()}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"large\"\n                        >\n                            Update\n                        </Button>\n                    )}\n            </div>\n        </Grid>\n\n    </>)\n\n}","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/users/services/user.service.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/users/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/checkout/checkout.js",["418","419","420","421","422","423","424","425","426","427"],"\nimport React, { useEffect, useState } from 'react'\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\n\n// import { getUserInfo, updateUserInfo } from './services/user.service'\nimport useStyles from \"./styles\";\nimport { Link } from 'react-router-dom';\n\n\nimport {\n    Grid,\n    CircularProgress,\n    Typography,\n    Button,\n    Tabs,\n    Card,\n    List,\n    ListItem,\n    MenuItem,\n    ListItemAvatar,\n    Avatar,\n    ListItemText,\n    Divider,\n    Fab,\n    Tab,\n    TextField,\n    Fade,\n    Collapse,\n    IconButton\n} from \"@material-ui/core\";\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport Delete from '@material-ui/icons/Delete'\nimport { useHistory } from 'react-router-dom';\n\n\n\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { getCartItems, removeFromCart, setCartQuantity, updateCartQunatityApi, clearCart } from '../../components/Product/service/cart';\n\nimport { placeOrder } from \"./services/order.service\";\n\n\n\nexport function CheckoutPage(props) {\n    var classes = useStyles();\n    var [isLoading, setisLoading] = useState(false);\n    var [error, setError] = useState(null);\n    var [order_to_name, setOrderToName] = useState(\"\");\n    var [address, setAddress] = useState(\"\");\n    var [status, setStatus] = useState(\"Pending\");\n    var [notes, setNotes] = useState(\"\");\n    var [phone, setPhoneValue] = useState(\"\");\n    const [open, setOpen] = useState(false);\n    var [cartItems, setCartItems] = useState([]);\n    const [paymentMethod, setpaymentMethod] = useState('CARD')\n    const [cardInfo, setcardInfo] = useState(9142998912349789)\n    const [cvv, setCvv] = useState('000')\n    const [otp, setOtp] = useState('')\n\n    const history = useHistory()\n\n\n\n    const [dialogOpen, setdialogOpen] = useState(false)\n\n    function updateQuantity(cartId, quantity) {\n        if (quantity > -1) {\n            setisLoading(true)\n            updateCartQunatityApi(cartId, { quantity }).then(res => {\n                getCartItems().then(re => {\n                    setCartItems(re)\n                });\n                setisLoading(false);\n\n            }).catch(err => {\n                setisLoading(false)\n\n            })\n        }\n    }\n\n    function removeFromCartItem(product) {\n        // setisLoading(true);\n        removeFromCart(product).then(res => {\n            getCartItems().then(res => {\n                setCartItems(res);\n                // removeItem(userDispatch)\n            })\n            setisLoading(false);\n\n        })\n    }\n\n    function getTotal(cartItems) {\n        return cartItems.map(cart => cart.product.prize * cart.quantity).reduce((a, b) => a + b, 0);\n\n    }\n\n    function getCartItemsLocal() {\n        getCartItems().then(re => {\n            setCartItems(re)\n        })\n    }\n\n    function onPlaceOrder() {\n        if(otp == '12345') {\n            let orderItems = cartItems.map(item => {\n                return {\n                    quantity: item.quantity,\n                    product: item.product.id\n                }\n            })\n    \n            let prize = getTotal(cartItems)\n            placeOrder({ order_to_name, address, status, notes, phone: parseInt(phone), orderItems, prize, paymentMethod }).then(res => {\n                clearCart().then(re => {\n                    history.push('/app/order/sucess')\n                })\n    \n                console.log(res);\n            })\n        } else {\n            setOpen(true)\n        }\n       \n    }\n\n    useEffect(() => {\n        console.log(\"USE EFFECT\");\n        // setDrawer(userState.isDrawerOpen)\n        getCartItemsLocal()\n        return () => {\n\n        }\n    }, [])\n\n    return (<><PageTitle title=\"Checkout\" />\n        <Grid container justify=\"center\">\n            <div style={{ width: '90%' }}>\n                <Card style={{ padding: '20px 30px', width: '100%' }}>\n                    <Typography variant=\"h5\" weight=\"medium\">Your Cart Deatils</Typography>\n                    <Grid wrap=\"nowrap\" style={{ marginTop: '40px' }}><List component=\"nav\" aria-label=\"main mailbox folders\" id=\"cartContent\">\n                        {cartItems.map(cart => <><Link to={'/app/product/view/' + cart.product.id}><ListItem button >\n                            <ListItemIcon>\n                                <AvatarGroup max={2}>\n                                    {cart.product.images.map(image => <Avatar alt=\"Remy Sharp\" src={'http://localhost:5000/' + image.path} />)}\n                                </AvatarGroup>\n                            </ListItemIcon>\n                            <ListItemText style={{ margin: '0 20px' }} primary={cart.product.name} secondary={\n                                <React.Fragment>\n                                    <Button size=\"medium\" color=\"secondary\" disabled={cart.quantity === 0}\n                                        onClick={(e) => { e.stopPropagation(); e.preventDefault(); e.nativeEvent.stopImmediatePropagation(); updateQuantity(cart.id, cart.quantity - 1) }}>\n                                        -\n                                    </Button>\n                                    <Typography\n                                        component=\"span\"\n                                        variant=\"body2\"\n                                        className={classes.inline}\n                                        color=\"textPrimary\"\n                                    >\n                                        {cart.quantity}\n                                    </Typography>\n                                    <Button size=\"medium\" color=\"primary\"\n                                        onClick={(e) => { e.stopPropagation(); e.preventDefault(); e.nativeEvent.stopImmediatePropagation(); updateQuantity(cart.id, cart.quantity + 1) }}>+</Button>\n\n                                    <Button size=\"medium\" color=\"secondary\"\n                                        onClick={(e) => { e.stopPropagation(); e.preventDefault(); e.nativeEvent.stopImmediatePropagation(); removeFromCartItem(cart.product.id); }}>\n                                        <Delete />\n                                    </Button>\n                                </React.Fragment>\n                            } />\n                            {/* <ListItemText style={{ margin: '0 20px' }} primary={cart.product.name} secondary={'$ ' + (cart.product.prize * cart.quantity) + '/-   Quantity: ' + String(cart.quantity)} /> */}\n                        </ListItem>\n                            <Divider />\n                        </Link></>)}\n                    </List>\n                        <br></br>\n                        <Grid container justify=\"flex-end\" alignItems=\"flex-end\">\n                            <Typography variant=\"h5\"> Total Cart Value: $<strong>{getTotal(cartItems)}\n                                </strong> </Typography>\n                        </Grid>\n                    </Grid>\n                    <br></br>\n\n                    <Grid container direction=\"column\" justify=\"center\">\n                        {error && <Typography color=\"secondary\" className={classes.errorMessage}>\n                            Something Worng with your products :(\n                                </Typography>}\n                                <br></br>\n                        <Typography variant=\"subtitle1\">Order Details</Typography>\n                        <br></br>\n                        <TextField id=\"checkoutname\"\n                            InputProps={{\n                                classes: {\n                                    underline: classes.textFieldUnderline,\n                                    input: classes.textField,\n                                },\n                            }}\n                            value={order_to_name}\n                            label=\"Order Name\"\n                            onChange={e => setOrderToName(e.target.value)}\n                            helperText=\"*Please enter the name of the person\"\n                            margin=\"normal\"\n                            placeholder=\"Name\"\n                            type=\"text\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            id=\"checkoutAdress\"\n                            rows={3}\n                            multiline\n                            label=\"Address\"\n                            InputProps={{\n                                classes: {\n                                    underline: classes.textFieldUnderline,\n                                    input: classes.textField,\n                                },\n                            }}\n                            helperText=\"Enter the address of order.\"\n                            value={address}\n                            onChange={e => setAddress(e.target.value)}\n                            margin=\"normal\"\n                            placeholder=\"Order Address\"\n                            type=\"text\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            id=\"userPhone\"\n                            InputProps={{\n                                classes: {\n                                    underline: classes.textFieldUnderline,\n                                    input: classes.textField,\n                                },\n                            }}\n                            label=\"Phone Number\"\n                            value={phone}\n                            onChange={e => setPhoneValue(e.target.value)}\n                            helperText=\"Please enter phone number for the executive to contact\"\n                            margin=\"normal\"\n                            placeholder=\"Phone\"\n                            type=\"number\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            id=\"notes\"\n                            label=\"Notes\"\n                            InputProps={{\n                                classes: {\n                                    underline: classes.textFieldUnderline,\n                                    input: classes.textField,\n                                },\n                            }}\n                            value={notes}\n                            onChange={e => setNotes(e.target.value)}\n                            margin=\"normal\"\n                            helperText=\"Please enter notes for us to take any actions\"\n\n                            placeholder=\"Add Notes\"\n                            type=\"text\"\n                            variant=\"outlined\"\n                        />\n                        <br></br>\n                        <Divider />\n                        <br></br>\n                        <Typography variant=\"h5\">Payment Details</Typography>\n                        <br></br>\n                        <TextField\n                            id=\"paymentMethod\"\n                            select\n                            label=\"Payment Type\"\n                            InputProps={{\n                                classes: {\n                                    underline: classes.textFieldUnderline,\n                                    input: classes.textField,\n                                },\n                            }}\n                            value={paymentMethod}\n                            onChange={e => setpaymentMethod(e.target.value)}\n                            margin=\"dense\"\n                            helperText=\"Currently we are only accepting Cards\"\n                            placeholder=\"Name\"\n                            type=\"text\"\n                            variant=\"outlined\"\n                        >\n                            <MenuItem key={'CARD'} value={'CARD'}>\n                                Card\n                                </MenuItem>\n                        </TextField>\n                        <TextField\n                            id=\"cardInfo\"\n                            InputProps={{\n                                classes: {\n                                    underline: classes.textFieldUnderline,\n                                    input: classes.textField,\n                                },\n                            }}\n                            label=\"Card Number\"\n                            value={cardInfo}\n                            onChange={e => setcardInfo(e.target.value)}\n                            margin=\"dense\"\n                            helperText=\"Must be a valid card\"\n                            placeholder=\"Name\"\n                            type=\"number\"\n                            variant=\"outlined\"\n                        >\n                        </TextField>\n                        <TextField\n                            id=\"cvv\"\n                            label=\"CVV\"\n                            InputProps={{\n                                classes: {\n                                    underline: classes.textFieldUnderline,\n                                    input: classes.textField,\n                                },\n                            }}\n                            value={cvv}\n                            helperText=\"Please enter CVV present at back of card\"\n                            onChange={e => setCvv(e.target.value)}\n                            margin=\"dense\"\n                            max={3}\n                            placeholder=\"CVV\"\n                            type=\"password\"\n                            variant=\"outlined\"\n                        >\n                        </TextField>\n                        <TextField\n                            margin=\"dense\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            id=\"otp\"\n                            value={'20/22'}\n                            variant=\"outlined\"\n                            label=\"Expiry Date\"\n                            type=\"text\"\n                            InputProps={{\n                                classes: {\n                                    underline: classes.textFieldUnderline,\n                                    input: classes.textField,\n                                },\n                            }}\n                            fullWidth\n                        />\n                        <div className={classes.formButtons}>\n                            {isLoading ? (\n                                <CircularProgress size={26} className={classes.loginLoader} />\n                            ) : (\n                                    <Button\n                                        id=\"placeOrderBtn\"\n                                        disabled={\n                                            phone.length === 0 ||\n                                            order_to_name.length === 0 || address.length === 0 || String(cardInfo).length !=16\n                                        }\n                                        // onClick={() => onPlaceOrder()}\n                                        onClick={() => setdialogOpen(true)}\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        size=\"large\"\n                                    >\n                                        Place Order\n                                    </Button>\n                                )}\n\n                            <Dialog open={dialogOpen} onClose={() => { }} aria-labelledby=\"form-dialog-title\" >\n                                <DialogTitle id=\"form-dialog-title\">Enter OTP</DialogTitle>\n                                <DialogContent style={{ width: '600px' }}>\n                                    <DialogContentText>\n                                        Do Not share your OTP with any others\n                                        <Collapse in={open}>\n                                            <Alert color=\"error\" action={<IconButton\n                                                aria-label=\"close\"\n                                                color=\"secondary\"\n                                                size=\"small\"\n                                                onClick={() => { setOpen(false) }}>\n                                                <CloseIcon fontSize=\"inherit\" />\n                                            </IconButton>}>\n                                               Invalid Card / Invalid Otp\n                        </Alert>\n                                        </Collapse>\n                                        {open && <Button onClick={()=>setOtp('')}>Resend Otp</Button>}\n                                    </DialogContentText>\n                                    <TextField\n\n                                        margin=\"dense\"\n                                        id=\"otpInput\"\n                                        value={otp}\n                                        onChange={(e) => setOtp(e.target.value)}\n                                        variant=\"outlined\"\n                                        label=\"Enter OTP\"\n                                        helperText=\"Please check your mobile phone and enter OTP - Ex:12345\"\n                                        type=\"password\"\n                                        InputProps={{\n                                            classes: {\n                                                underline: classes.textFieldUnderline,\n                                                input: classes.textField,\n                                            },\n                                        }}\n                                        fullWidth\n                                    />\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={() => setdialogOpen(false)} color=\"primary\">\n                                        Cancel\n                                    </Button>\n                                    <Button id=\"confirmOtp\" onClick={() => onPlaceOrder()} disabled={!otp || !(otp.length >= 4)} color=\"primary\" variant=\"contained\">\n                                        Confirm\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                        </div>\n                    </Grid>\n                </Card>\n            </div>\n        </Grid>\n    </>)\n}","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/checkout/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/checkout/services/order.service.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/checkout/orderplaced.js",["428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455"],"\n\n\nimport React, { useEffect, useState } from 'react'\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\n\n// import { getUserInfo, updateUserInfo } from './services/user.service'\nimport useStyles from \"./styles\";\nimport { Link } from 'react-router-dom';\n\n\nimport {\n    Grid,\n    CircularProgress,\n    Typography,\n    Button,\n    Tabs,\n    Card,\n    List,\n    ListItem,\n    ListItemAvatar,\n    Avatar,\n    ListItemText,\n    Divider,\n    Fab,\n    Tab,\n    TextField,\n    Fade,\n    Collapse,\n    IconButton\n} from \"@material-ui/core\";\n\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\n\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport Delete from '@material-ui/icons/Delete'\n\n\n\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { getCartItems, removeFromCart, setCartQuantity, updateCartQunatityApi } from '../../components/Product/service/cart'\n\n\n\nexport function OrderSuccessPage(props) {\n\n    useEffect(() => {\n        document.title = \"Order Sucess\"\n        return () => {\n            \n        }\n    }, [])\n\n\n    return (<>\n        <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\n\n            <CheckCircleOutlineIcon style={{ color: 'green', fontSize: '200' }} />\n            <Typography variant=\"h2\">THANK YOU!! You order has been placed</Typography>\n            <br></br>\n            <Link to={'/app/dashboard'}><Typography variant=\"h4\">\n                <u>\n                    Go to Products\n                    </u>\n            </Typography></Link>\n        </Grid>\n\n    </>)\n}","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/support/support.js",["456","457","458","459","460","461","462","463","464","465","466","467"],"\nimport React, { useEffect, useState } from 'react'\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\n\nimport useStyles from \"./styles\";\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom'\n\nimport {\n    Grid,\n    CircularProgress,\n    Typography,\n    Divider,\n    Button,\n    Tabs,\n    Tab,\n    TextField,\n    Fade,\n    Collapse,\n    IconButton,\n    Card\n} from \"@material-ui/core\";\n\nimport {\n    Table,\n    TableRow,\n    TableHead,\n    TableBody,\n    TableCell,\n    Chip\n} from \"@material-ui/core\";\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useUserDispatch } from \"../../context/UserContext\";\n\nimport { getMyIssues, addIssue } from \"./services/statusService\";\n\nvar dateFormat = require(\"dateformat\");\n\n\n\nexport function SupportPage(props) {\n\n    var history = useHistory()\n    var dispatch = useUserDispatch()\n    var classes = useStyles();\n    var [isLoading, setIsLoading] = useState(false);\n    var [error, setError] = useState(null);\n    var [title, setTitle] = useState(\"\");\n    var [description, setDescription] = useState(\"\");\n    var [myIssues, setMyIssues] = useState([]);\n    var [phone, setPhoneValue] = useState(\"\");\n    const [open, setOpen] = useState(false);\n\n    function addIssueC() {\n        setIsLoading(true);\n        addIssue({ title, description }).then(res => {\n            setIsLoading(false);\n            setOpen(true);\n            setTitle('')\n            setDescription('');\n            getMyIssuesFromService()\n\n        }).finally(() => {\n            setIsLoading(false);\n        })\n\n    }\n\n    function getMyIssuesFromService() {\n\n        getMyIssues().then(res => {\n            setMyIssues(res)\n        }).finally(() => {\n\n        })\n\n    }\n\n\n\n    useEffect(() => {\n        getMyIssuesFromService()\n\n        return () => { }\n    }, [])\n\n    return (<><PageTitle title=\"How Can we Help you today?\" button={<Button\n        variant=\"contained\"\n        size=\"medium\"\n        onClick={() => history.push('/app/dashboard')}\n        color=\"secondary\"\n    >\n        Go to Phones\n        </Button>} />\n        <Collapse in={open}>\n            <Alert\n                action={\n                    <IconButton\n                        aria-label=\"close\"\n                        color=\"inherit\"\n                        size=\"medium\"\n                        onClick={() => {\n                            setOpen(false);\n                        }}\n                    >\n                        <CloseIcon fontSize=\"inherit\" />\n                    </IconButton>\n                }\n            >\n                Your issue has been recorded !! Soon Our Executive will Contact you.\n        </Alert>\n        </Collapse>\n\n\n        <Grid container spacing={4} direction=\"column\" justify=\"center\" alignItems=\"center\" style={{ width: '80%' }}>\n\n            <TextField\n                style={{ margin: '30px' }}\n                fullWidth\n                value={title}\n\n                variant=\"filled\"\n                placeholder=\"Add Title\"\n                label=\"Title\"\n                helperText=\"Enter your title of your issue\"\n                onChange={(e) => setTitle(e.target.value)}\n            ></TextField>\n\n            <TextField\n                style={{ margin: '30px' }}\n                fullWidth\n                value={description}\n                variant=\"outlined\"\n                placeholder=\"Add Title\"\n                label=\"Title\"\n                multiline\n                rows={5}\n                helperText=\"Enter your issue in details\"\n                onChange={(e) => setDescription(e.target.value)}\n            ></TextField>\n\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={!(title && description)}\n                onClick={() => addIssueC()}\n\n            >Raise Issue</Button>\n\n        </Grid>\n        <br></br>\n        <br></br>\n        <Divider />\n        <br></br>\n\n        <Grid container justify=\"center\" style={{ width: '70%' }}>\n            <Typography variant=\"h4\" className=\"mt-4\">My Previous Issues</Typography>\n        </Grid>\n        <br></br>\n        <Grid container spacing={4} direction=\"column\" justify=\"center\" alignItems=\"center\" style={{ width: '80%' }}>\n            <Card style={{ width: '70%' }}>\n                <Table className=\"mb-0\">\n                    <TableHead>\n                        <TableRow>\n                            {['Sl No.', 'Title', 'Status', 'Last Updated '].map(key => (\n                                <TableCell key={key}>{key}</TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {myIssues.map(({ id, title, status, updatedAt }, i) => (\n                            <TableRow key={i}>\n                                <TableCell className=\"pl-3 fw-normal\">{i + 1}</TableCell>\n                                <TableCell className=\"pl-3 fw-normal \"><Link to={\"/app/support-view/\" + id}>{title}\n                                </Link></TableCell>\n                                <TableCell>\n                                    <Chip label={status} color={status == 'PENDING' ? 'secondary' : 'primary'} />\n                                </TableCell>\n                                <TableCell>{dateFormat(updatedAt, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}</TableCell>\n\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Card>\n        </Grid>\n\n\n\n\n    </>)\n\n}","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/support/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/support/services/statusService.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/support/viewSupport.js",["468","469","470","471","472","473","474","475","476","477","478","479","480"],"\nimport React, { useEffect, useState } from 'react'\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\n\nimport useStyles from \"./styles\";\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport {\n    Grid,\n    CircularProgress,\n    Typography,\n    Button,\n    Tabs,\n    Tab,\n    TextField,\n    Fade,\n    Collapse,\n    IconButton,\n    Fab,\n    Card\n} from \"@material-ui/core\";\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useUserDispatch } from \"../../context/UserContext\";\n\nimport { getIssueById, updateIssueConv, updateIssueStatus } from \"./services/statusService\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nvar dateFormat = require(\"dateformat\");\n\nexport function VeiwSupportPage(props) {\n\n    var { id } = useParams();\n    var role = localStorage.getItem('role');\n    var username = localStorage.getItem('name')\n\n    var history = useHistory()\n    var dispatch = useUserDispatch()\n    var classes = useStyles();\n    var [isLoading, setIsLoading] = useState(false);\n    var [error, setError] = useState(null);\n    var [title, setTitle] = useState(\"\");\n    var [description, setDescription] = useState(\"\");\n    var [status, setStatus] = useState([]);\n    var [conversation, setConversion] = useState([]);\n    const [open, setOpen] = useState(false);\n    const [comment, setComment] = useState(\"\");\n\n\n    function onAddComment() {\n        let conv = {\n            username,\n            comment,\n            date: new Date().toISOString()\n        }\n        conversation.push(conv)\n        setIsLoading(true)\n        updateIssueConv(conversation, id).then(re => {\n            getIssueById(id).then(re => {\n                setTitle(re.title);\n                setDescription(re.description);\n                let convo = JSON.parse(re.conversation)\n                if(Array.isArray(convo)) {\n                    setConversion(convo)\n\n                }\n                setStatus(re.status)\n                console.log(re);\n                setIsLoading(false)\n\n            })\n        })\n    }\n\n    function onStatusChange() {\n        updateIssueStatus({ status: 'RESOLVED' },id).then(re => {\n            setStatus(re.status);\n            getIssueById(id).then(re => {\n                setTitle(re.title);\n                setDescription(re.description);\n                let convo = JSON.parse(re.conversation)\n                if(Array.isArray(convo)) {\n                    setConversion(convo)\n\n                }\n                setStatus(re.status)\n                console.log(re);\n                setIsLoading(false)\n\n            })\n        })\n\n    }\n\n\n\n    useEffect(() => {\n        getIssueById(id).then(re => {\n            setTitle(re.title);\n            setDescription(re.description);\n            let convo = JSON.parse(re.conversation)\n            if(Array.isArray(convo)) {\n                setConversion(convo)\n\n            }\n            setStatus(re.status)\n            console.log(re);\n        })\n        return () => { }\n    }, [])\n\n    return (<><PageTitle title={title} button={<Button\n        variant=\"contained\"\n        size=\"medium\"\n        onClick={() => history.push('/app/dashboard')}\n        color=\"secondary\"\n    >\n        Go to view Phones\n        </Button>} />\n\n        <Collapse in={open}>\n            <Alert\n                action={\n                    <IconButton\n                        aria-label=\"close\"\n                        color=\"inherit\"\n                        size=\"small\"\n                        onClick={() => {\n                            setOpen(false);\n                        }}\n                    >\n                        <CloseIcon fontSize=\"inherit\" />\n                    </IconButton>\n                }\n            >\n                Your Info has been updated sucessfully\n        </Alert>\n        </Collapse>\n        <Typography variant=\"h4\"><strong>Status: </strong> {status == 'PENDING' ? <span style={{ color: 'red' }}>{status}</span> : <span style={{ color: 'green' }}>{status}</span>}</Typography>\n        <br></br>\n\n        <Typography variant=\"h6\"><strong>Description: </strong>{description}</Typography>\n        <br></br>\n        {conversation.map(conv => <Card style={{padding: '30px', margin: '30px'}}>\n                <strong>{conv.username}</strong>\n                <br></br>\n                <i style={{color: 'gray', fontSize : '10px'}}>{dateFormat(conv.date, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}</i>\n                <br></br>\n                <br></br>\n\n                <i>{conv.comment}</i>\n            <br></br>\n        </Card>)}\n<br></br>\n\n        <TextField\n            value={comment}\n            fullWidth\n            onChange={((e) => setComment(e.target.value))}\n            label=\"Add Follow up Comments\"\n            variant=\"outlined\"\n            multiline\n            rows={5}\n            helperText=\"Please Add your comments\"\n        ></TextField>\n        <br></br>\n        <Button onClick={() => {onAddComment();setComment(\"\")}} color=\"primary\" variant=\"contained\" >Add Comment</Button>\n        <br></br>\n\n        {role == 'ADMIN' && status == 'PENDING' && <Fab onClick={() => onStatusChange()} color=\"primary\" variant=\"extended\" className={classes.sendButtonIcon} style={{ marginTop: '40px' }}>Mark Resolved <CheckCircleIcon /></Fab>}\n\n\n\n\n\n    </>)\n\n}","/home/tapclicks/Desktop/code/kart/kart-ui/src/components/Product/styles.js",[],"/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/support/adminViewSupport.js",["481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496"],"\nimport React, { useEffect, useState } from 'react'\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\n\nimport useStyles from \"./styles\";\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom'\n\nimport {\n    Grid,\n    CircularProgress,\n    Typography,\n    Divider,\n    Button,\n    Tabs,\n    Tab,\n    TextField,\n    Fade,\n    Collapse,\n    IconButton,\n    Card\n} from \"@material-ui/core\";\n\nimport {\n    Table,\n    TableRow,\n    TableHead,\n    TableBody,\n    TableCell,\n    Chip\n} from \"@material-ui/core\";\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useUserDispatch } from \"../../context/UserContext\";\n\nimport { getMyIssues, addIssue, getAll } from \"./services/statusService\";\n\n\n\n\nexport function AdminSupportPage(props) {\n\n    var history = useHistory()\n    var dispatch = useUserDispatch()\n    var classes = useStyles();\n    var [isLoading, setIsLoading] = useState(false);\n    var [error, setError] = useState(null);\n    var [title, setTitle] = useState(\"\");\n    var [description, setDescription] = useState(\"\");\n    var [myIssues, setMyIssues] = useState([]);\n    var [phone, setPhoneValue] = useState(\"\");\n    const [open, setOpen] = useState(false);\n\n    function addIssueC() {\n        setIsLoading(true);\n        addIssue({ title, description }).then(res => {\n            setIsLoading(false);\n            setOpen(true);\n            setTitle('')\n            setDescription('');\n            getMyIssuesFromService()\n\n        }).finally(() => {\n            setIsLoading(false);\n        })\n\n    }\n\n    function getMyIssuesFromService() {\n\n        getAll().then(res => {\n            setMyIssues(res)\n        }).finally(() => {\n\n        })\n\n    }\n\n\n\n    useEffect(() => {\n        getMyIssuesFromService()\n\n        return () => { }\n    }, [])\n\n    return (<><PageTitle title=\"How Can we Help you today?\" button={<Button\n        variant=\"contained\"\n        size=\"medium\"\n        onClick={() => history.push('/app/dashboard')}\n        color=\"secondary\"\n    >\n        Go to Phones\n        </Button>} />\n        <Collapse in={open}>\n            <Alert\n                action={\n                    <IconButton\n                        aria-label=\"close\"\n                        color=\"inherit\"\n                        size=\"medium\"\n                        onClick={() => {\n                            setOpen(false);\n                        }}\n                    >\n                        <CloseIcon fontSize=\"inherit\" />\n                    </IconButton>\n                }\n            >\n                Your issue has been recorded !! Soon Our Executive will Contact you.\n        </Alert>\n        </Collapse>\n\n        <Grid container justify=\"center\" style={{width: '90%'}}>\n            <Typography variant=\"h4\" className=\"mt-4\">My Previous Issues</Typography>\n        </Grid>\n        <br></br>\n        <Grid container spacing={4} direction=\"column\" justify=\"center\" alignItems=\"center\" style={{ width: '80%' }}>\n            <Card style={{ width: '90%' }}>\n                <Table className=\"mb-0\">\n                    <TableHead>\n                        <TableRow>\n                            {['Sl No.', 'Title', 'Status', 'Last Updated ', 'Raised By'].map(key => (\n                                <TableCell key={key}>{key}</TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {myIssues.map(({ id, title, status, updatedAt, user }, i) => (\n                            <TableRow key={i}>\n                                <TableCell className=\"pl-3 fw-normal\">{i + 1}</TableCell>\n                                <TableCell className=\"pl-3 fw-normal\"><Link to={\"/app/support-view/\" + id}>{title}\n                                    </Link></TableCell>\n                                <TableCell>\n                                    <Chip label={status} color={status == 'PENDING' ? 'secondary': 'primary'} />\n                                </TableCell>\n                                <TableCell>{updatedAt}</TableCell>\n                                <TableCell>{user.firstName + ' ' + user.lastName}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Card>\n        </Grid>\n        <Grid>\n            \n        </Grid>\n\n\n\n\n    </>)\n\n}","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/orders/AdminOrders.js",["497","498","499","500","501"],"import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MUIDataTable from \"mui-datatables\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport Table from \"../dashboard/components/Table/Table\";\n\n// data\nimport mock from \"../dashboard/mock\";\n\nimport { getOrders, getAllOrders } from \"../checkout/services/order.service\";\n\nconst datatableData = [\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Pending\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Pending\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Delivered\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Delivered\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Delivered\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Delivered\"],\n  [\"Iphone 12\", \"Apple Inc.\", \"1000$\", \"Delivered\"],\n  [\"Iphone 8\", \"Apple Inc.\", \"900$\", \"Delivered\"],\n  [\"Acer Laptop\", \"Apple Inc.\", \"1500$\", \"Delivered\"],\n  [\"Iphone Charger\", \"Apple Inc.\", \"100$\", \"Delivered\"],\n];\n\nconst useStyles = makeStyles(theme => ({\n  tableOverflow: {\n    overflow: 'auto'\n  },\n  success: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n  },\n  warning: {\n    backgroundColor: theme.palette.warning.main,\n    color: '#fff',\n  },\n  secondary: {\n    backgroundColor: theme.palette.secondary.main,\n    color: '#fff',\n  },\n}))\n\nexport function AdminOrders() {\n  const classes = useStyles();\n\n  const role = localStorage.getItem('role')\n\n  const [orders, setorders] = useState([])\n\n  useEffect(() => {\n    getAllOrders().then(res => {\n      setorders(res)\n    })\n    return () => {\n\n    }\n  }, [])\n\n\n  return (\n    <>\n      <PageTitle title=\"Orders\" />\n      <Grid container spacing={4}>\n        {/* <Grid item xs={12}>\n          <MUIDataTable\n            title=\"Employee List\"\n            data={datatableData}\n            columns={[\"Item\", \"Brand\", \"Price\", \"Status\"]}\n            options={{\n              filterType: \"checkbox\",\n            }}\n          />\n        </Grid> */}\n\n        <Grid item xs={12}>\n          <Widget title=\"Previous Orders\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n            <Table data={orders} />\n          </Widget>\n        </Grid>\n        {/* <Grid item xs={12}>\n        <Widget title=\"Previous Orders\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n          <Table data={mock.table} />\n        </Widget>\n      </Grid> */}\n      </Grid>\n    </>\n  );\n}\n","/home/tapclicks/Desktop/code/kart/kart-ui/src/pages/orders/ViewOrder.js",["502","503","504","505","506","507","508"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Card, Divider, Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\n\nimport {\n    Table,\n    TableRow,\n    TableHead,\n    TableBody,\n    TableCell,\n    Chip\n} from \"@material-ui/core\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\n// import Table from \"../dashboard/components/Table/Table\";\n\n// data\n\nimport { getOrderById, getAllOrders, updateOrderStatus } from \"../checkout/services/order.service\";\nimport { useParams } from \"react-router-dom\";\nimport { Done } from \"@material-ui/icons\";\n\n\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    },\n    success: {\n        backgroundColor: theme.palette.success.main,\n        color: '#fff',\n    },\n    warning: {\n        backgroundColor: theme.palette.warning.main,\n        color: '#fff',\n    },\n    secondary: {\n        backgroundColor: theme.palette.secondary.main,\n        color: '#fff',\n    },\n}))\n\nconst states = {\n    delivered: \"success\",\n    pending: \"warning\",\n    cancelled: \"secondary\",\n};\n\nvar dateFormat = require(\"dateformat\");\n\nexport function ViewOrder() {\n    const classes = useStyles();\n\n    const isAdmin = localStorage.getItem('role') == 'ADMIN';\n\n    var { id } = useParams()\n\n    const [order, setorder] = useState({})\n\n    function updateOrderStatusS(status) {\n        updateOrderStatus({ status }, id).then(res => {\n            getOrderById(id).then(res => {\n                setorder(res)\n            })\n        })\n    }\n\n    useEffect(() => {\n        getOrderById(id).then(res => {\n            setorder(res)\n        })\n        return () => {\n\n        }\n    }, [])\n\n\n    return (\n        <>\n            <PageTitle title=\"Order Details\" />\n            <Grid container spacing={4}>\n                <Card style={{ padding: '30px', width: '100%' }}>\n                    <span>\n                        <strong>Order Name : </strong>\n                        <i>{order.order_to_name}</i>\n                    </span>\n                    <br></br>\n                    <br></br>\n\n                    <span>\n                        <strong>Order Address : </strong>\n                        <i>{order.address}</i>\n                    </span>\n                    <br></br>\n                    <br></br>\n\n                    <span>\n                        <strong>Order Phone : </strong>\n                        <i>{order.phone}</i>\n                    </span>\n                    <br></br>\n                    <br></br>\n\n                    <span>\n                        <strong>Order Payment Status : </strong>\n                        <i>Paid ({order.paymentMethod})</i>\n                    </span>\n                    <br></br>\n                    <br></br>\n\n                    <span>\n                        <strong>Order Date : </strong>\n                        <i>{dateFormat(order.createdAt, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}</i>\n                    </span>\n                    <br></br>\n                    <br></br>\n\n                    <Typography variant=\"h5\">Order Amount: ${order.prize}</Typography>\n\n                    <br></br>\n                    <span>\n                        <strong>Order Status : </strong>\n                        <Chip variant=\"outlined\" classes={{ root: classes[states[order.status?.toLowerCase()]] }} label={order.status} />\n                    </span>\n                    <br></br>\n                    <br></br>\n\n                    <Divider />\n                    <br></br>\n                    <Typography variant=\"h4\">Order Details</Typography>\n                    <br></br>\n\n                    <Table className=\"mb-0\">\n                        <TableHead>\n                            <TableRow>\n                                {['Sl No', 'Product Name', 'Price', 'Quantity'].map(key => (\n                                    <TableCell key={key}>{key}</TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {order.orderItems && order.orderItems.map(({ id, product, quantity }, i) => (\n                                <TableRow key={i}>\n                                    <TableCell className=\"pl-3 fw-normal\">{i + 1}</TableCell>\n                                    <TableCell className=\"pl-3 fw-normal\">\n                                        {product.name}</TableCell>\n                                    <TableCell>${product.prize * quantity}</TableCell>\n                                    <TableCell>{quantity}</TableCell>\n                                </TableRow>\n                            ))}\n                            <TableRow >\n                                <TableCell className=\"pl-3 fw-normal\"></TableCell>\n                                <TableCell className=\"pl-3 fw-normal\">\n                                    <strong> Total </strong></TableCell>\n                                <TableCell><strong>\n                                    ${order.prize}\n                                </strong></TableCell>\n                                <TableCell></TableCell>\n\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n\n                    <br></br>\n\n                    {order.status && order.status == 'Pending' && <Button variant=\"outlined\" color=\"secondary\" onClick={() => updateOrderStatusS('Cancelled')}>Cancel Order</Button>}\n                    <br></br>\n                    {order.status && order.status == 'Pending' && isAdmin && <Button variant=\"outlined\" color=\"primary\" style={{ marginTop: '30px' }} onClick={() => updateOrderStatusS('Delivered')}>Mark As Delivered</Button>}\n\n                </Card>\n\n\n                {/* <Grid item xs={12}>\n          <MUIDataTable\n            title=\"Employee List\"\n            data={datatableData}\n            columns={[\"Item\", \"Brand\", \"Price\", \"Status\"]}\n            options={{\n              filterType: \"checkbox\",\n            }}\n          />\n        </Grid> */}\n\n                {/* <Grid item xs={12}>\n                    <Widget title=\"Previous Orders\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                        <Table data={orders} />\n                    </Widget>\n                </Grid> */}\n                {/* <Grid item xs={12}>\n        <Widget title=\"Previous Orders\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n          <Table data={mock.table} />\n        </Widget>\n      </Grid> */}\n            </Grid>\n        </>\n    );\n}\n",{"ruleId":"509","replacedBy":"510"},{"ruleId":"511","replacedBy":"512"},{"ruleId":"513","severity":1,"message":"514","line":30,"column":8,"nodeType":"515","messageId":"516","endLine":30,"endColumn":21},{"ruleId":"513","severity":1,"message":"517","line":4,"column":3,"nodeType":"515","messageId":"516","endLine":4,"endColumn":19},{"ruleId":"513","severity":1,"message":"518","line":10,"column":3,"nodeType":"515","messageId":"516","endLine":10,"endColumn":7},{"ruleId":"513","severity":1,"message":"519","line":3,"column":5,"nodeType":"515","messageId":"516","endLine":3,"endColumn":9},{"ruleId":"513","severity":1,"message":"520","line":7,"column":5,"nodeType":"515","messageId":"516","endLine":7,"endColumn":9},{"ruleId":"513","severity":1,"message":"521","line":8,"column":5,"nodeType":"515","messageId":"516","endLine":8,"endColumn":8},{"ruleId":"513","severity":1,"message":"518","line":10,"column":5,"nodeType":"515","messageId":"516","endLine":10,"endColumn":9},{"ruleId":"513","severity":1,"message":"522","line":13,"column":8,"nodeType":"515","messageId":"516","endLine":13,"endColumn":18},{"ruleId":"513","severity":1,"message":"523","line":21,"column":8,"nodeType":"515","messageId":"516","endLine":21,"endColumn":12},{"ruleId":"513","severity":1,"message":"524","line":22,"column":8,"nodeType":"515","messageId":"516","endLine":22,"endColumn":14},{"ruleId":"513","severity":1,"message":"519","line":3,"column":5,"nodeType":"515","messageId":"516","endLine":3,"endColumn":9},{"ruleId":"513","severity":1,"message":"520","line":7,"column":5,"nodeType":"515","messageId":"516","endLine":7,"endColumn":9},{"ruleId":"513","severity":1,"message":"521","line":8,"column":5,"nodeType":"515","messageId":"516","endLine":8,"endColumn":8},{"ruleId":"513","severity":1,"message":"518","line":10,"column":5,"nodeType":"515","messageId":"516","endLine":10,"endColumn":9},{"ruleId":"513","severity":1,"message":"522","line":13,"column":8,"nodeType":"515","messageId":"516","endLine":13,"endColumn":18},{"ruleId":"513","severity":1,"message":"523","line":23,"column":8,"nodeType":"515","messageId":"516","endLine":23,"endColumn":12},{"ruleId":"513","severity":1,"message":"524","line":24,"column":8,"nodeType":"515","messageId":"516","endLine":24,"endColumn":14},{"ruleId":"513","severity":1,"message":"525","line":4,"column":10,"nodeType":"515","messageId":"516","endLine":4,"endColumn":16},{"ruleId":"513","severity":1,"message":"526","line":4,"column":18,"nodeType":"515","messageId":"516","endLine":4,"endColumn":23},{"ruleId":"513","severity":1,"message":"527","line":8,"column":3,"nodeType":"515","messageId":"516","endLine":8,"endColumn":17},{"ruleId":"513","severity":1,"message":"528","line":9,"column":3,"nodeType":"515","messageId":"516","endLine":9,"endColumn":9},{"ruleId":"513","severity":1,"message":"529","line":10,"column":3,"nodeType":"515","messageId":"516","endLine":10,"endColumn":16},{"ruleId":"513","severity":1,"message":"530","line":11,"column":3,"nodeType":"515","messageId":"516","endLine":11,"endColumn":11},{"ruleId":"513","severity":1,"message":"531","line":21,"column":8,"nodeType":"515","messageId":"516","endLine":21,"endColumn":17},{"ruleId":"513","severity":1,"message":"532","line":4,"column":8,"nodeType":"515","messageId":"516","endLine":4,"endColumn":20},{"ruleId":"513","severity":1,"message":"533","line":12,"column":8,"nodeType":"515","messageId":"516","endLine":12,"endColumn":12},{"ruleId":"513","severity":1,"message":"534","line":16,"column":7,"nodeType":"515","messageId":"516","endLine":16,"endColumn":20},{"ruleId":"513","severity":1,"message":"519","line":2,"column":10,"nodeType":"515","messageId":"516","endLine":2,"endColumn":14},{"ruleId":"513","severity":1,"message":"535","line":4,"column":10,"nodeType":"515","messageId":"516","endLine":4,"endColumn":24},{"ruleId":"513","severity":1,"message":"536","line":5,"column":8,"nodeType":"515","messageId":"516","endLine":5,"endColumn":25},{"ruleId":"513","severity":1,"message":"537","line":6,"column":10,"nodeType":"515","messageId":"516","endLine":6,"endColumn":15},{"ruleId":"513","severity":1,"message":"522","line":7,"column":8,"nodeType":"515","messageId":"516","endLine":7,"endColumn":18},{"ruleId":"513","severity":1,"message":"538","line":14,"column":8,"nodeType":"515","messageId":"516","endLine":14,"endColumn":14},{"ruleId":"513","severity":1,"message":"539","line":17,"column":10,"nodeType":"515","messageId":"516","endLine":17,"endColumn":20},{"ruleId":"513","severity":1,"message":"540","line":17,"column":22,"nodeType":"515","messageId":"516","endLine":17,"endColumn":28},{"ruleId":"513","severity":1,"message":"541","line":340,"column":12,"nodeType":"515","messageId":"516","endLine":340,"endColumn":34},{"ruleId":"513","severity":1,"message":"542","line":384,"column":12,"nodeType":"515","messageId":"516","endLine":384,"endColumn":38},{"ruleId":"513","severity":1,"message":"543","line":390,"column":10,"nodeType":"515","messageId":"516","endLine":390,"endColumn":21},{"ruleId":"513","severity":1,"message":"544","line":5,"column":24,"nodeType":"515","messageId":"516","endLine":5,"endColumn":41},{"ruleId":"513","severity":1,"message":"545","line":6,"column":17,"nodeType":"515","messageId":"516","endLine":6,"endColumn":31},{"ruleId":"513","severity":1,"message":"546","line":7,"column":17,"nodeType":"515","messageId":"516","endLine":7,"endColumn":31},{"ruleId":"513","severity":1,"message":"547","line":24,"column":8,"nodeType":"515","messageId":"516","endLine":24,"endColumn":11},{"ruleId":"513","severity":1,"message":"548","line":12,"column":3,"nodeType":"515","messageId":"516","endLine":12,"endColumn":20},{"ruleId":"513","severity":1,"message":"549","line":34,"column":7,"nodeType":"515","messageId":"516","endLine":34,"endColumn":12},{"ruleId":"513","severity":1,"message":"550","line":45,"column":10,"nodeType":"515","messageId":"516","endLine":45,"endColumn":14},{"ruleId":"513","severity":1,"message":"551","line":68,"column":12,"nodeType":"515","messageId":"516","endLine":68,"endColumn":33},{"ruleId":"513","severity":1,"message":"552","line":203,"column":10,"nodeType":"515","messageId":"516","endLine":203,"endColumn":26},{"ruleId":"513","severity":1,"message":"553","line":8,"column":3,"nodeType":"515","messageId":"516","endLine":8,"endColumn":12},{"ruleId":"513","severity":1,"message":"554","line":19,"column":18,"nodeType":"515","messageId":"516","endLine":19,"endColumn":26},{"ruleId":"513","severity":1,"message":"544","line":20,"column":24,"nodeType":"515","messageId":"516","endLine":20,"endColumn":41},{"ruleId":"513","severity":1,"message":"555","line":22,"column":13,"nodeType":"515","messageId":"516","endLine":22,"endColumn":23},{"ruleId":"513","severity":1,"message":"556","line":46,"column":8,"nodeType":"515","messageId":"516","endLine":46,"endColumn":20},{"ruleId":"513","severity":1,"message":"557","line":48,"column":8,"nodeType":"515","messageId":"516","endLine":48,"endColumn":20},{"ruleId":"513","severity":1,"message":"558","line":57,"column":40,"nodeType":"515","messageId":"516","endLine":57,"endColumn":55},{"ruleId":"513","severity":1,"message":"559","line":78,"column":23,"nodeType":"515","messageId":"516","endLine":78,"endColumn":39},{"ruleId":"513","severity":1,"message":"560","line":79,"column":8,"nodeType":"515","messageId":"516","endLine":79,"endColumn":25},{"ruleId":"513","severity":1,"message":"561","line":79,"column":27,"nodeType":"515","messageId":"516","endLine":79,"endColumn":47},{"ruleId":"513","severity":1,"message":"562","line":80,"column":8,"nodeType":"515","messageId":"516","endLine":80,"endColumn":29},{"ruleId":"513","severity":1,"message":"563","line":80,"column":31,"nodeType":"515","messageId":"516","endLine":80,"endColumn":55},{"ruleId":"513","severity":1,"message":"564","line":82,"column":8,"nodeType":"515","messageId":"516","endLine":82,"endColumn":20},{"ruleId":"513","severity":1,"message":"565","line":82,"column":22,"nodeType":"515","messageId":"516","endLine":82,"endColumn":35},{"ruleId":"513","severity":1,"message":"566","line":84,"column":10,"nodeType":"515","messageId":"516","endLine":84,"endColumn":19},{"ruleId":"567","severity":1,"message":"568","line":131,"column":6,"nodeType":"569","endLine":131,"endColumn":8,"suggestions":"570"},{"ruleId":"513","severity":1,"message":"571","line":5,"column":10,"nodeType":"515","messageId":"516","endLine":5,"endColumn":20},{"ruleId":"513","severity":1,"message":"572","line":6,"column":53,"nodeType":"515","messageId":"516","endLine":6,"endColumn":66},{"ruleId":"513","severity":1,"message":"527","line":10,"column":5,"nodeType":"515","messageId":"516","endLine":10,"endColumn":19},{"ruleId":"513","severity":1,"message":"529","line":12,"column":5,"nodeType":"515","messageId":"516","endLine":12,"endColumn":18},{"ruleId":"513","severity":1,"message":"573","line":18,"column":5,"nodeType":"515","messageId":"516","endLine":18,"endColumn":10},{"ruleId":"513","severity":1,"message":"574","line":19,"column":5,"nodeType":"515","messageId":"516","endLine":19,"endColumn":9},{"ruleId":"513","severity":1,"message":"575","line":71,"column":12,"nodeType":"515","messageId":"516","endLine":71,"endColumn":20},{"ruleId":"513","severity":1,"message":"576","line":71,"column":22,"nodeType":"515","messageId":"516","endLine":71,"endColumn":33},{"ruleId":"513","severity":1,"message":"577","line":82,"column":25,"nodeType":"515","messageId":"516","endLine":82,"endColumn":39},{"ruleId":"578","severity":1,"message":"579","line":90,"column":56,"nodeType":"580","messageId":"581","endLine":90,"endColumn":58},{"ruleId":"578","severity":1,"message":"579","line":90,"column":81,"nodeType":"580","messageId":"581","endLine":90,"endColumn":83},{"ruleId":"578","severity":1,"message":"579","line":102,"column":56,"nodeType":"580","messageId":"581","endLine":102,"endColumn":58},{"ruleId":"578","severity":1,"message":"579","line":102,"column":81,"nodeType":"580","messageId":"581","endLine":102,"endColumn":83},{"ruleId":"513","severity":1,"message":"582","line":153,"column":14,"nodeType":"515","messageId":"516","endLine":153,"endColumn":29},{"ruleId":"567","severity":1,"message":"583","line":179,"column":8,"nodeType":"569","endLine":179,"endColumn":10,"suggestions":"584"},{"ruleId":"578","severity":1,"message":"585","line":212,"column":151,"nodeType":"580","messageId":"581","endLine":212,"endColumn":153},{"ruleId":"578","severity":1,"message":"585","line":218,"column":149,"nodeType":"580","messageId":"581","endLine":218,"endColumn":151},{"ruleId":"586","severity":1,"message":"587","line":229,"column":25,"nodeType":"588","endLine":229,"endColumn":121},{"ruleId":"513","severity":1,"message":"527","line":7,"column":5,"nodeType":"515","messageId":"516","endLine":7,"endColumn":19},{"ruleId":"513","severity":1,"message":"528","line":8,"column":5,"nodeType":"515","messageId":"516","endLine":8,"endColumn":11},{"ruleId":"513","severity":1,"message":"529","line":9,"column":5,"nodeType":"515","messageId":"516","endLine":9,"endColumn":18},{"ruleId":"513","severity":1,"message":"530","line":10,"column":5,"nodeType":"515","messageId":"516","endLine":10,"endColumn":13},{"ruleId":"513","severity":1,"message":"573","line":14,"column":5,"nodeType":"515","messageId":"516","endLine":14,"endColumn":10},{"ruleId":"513","severity":1,"message":"589","line":15,"column":5,"nodeType":"515","messageId":"516","endLine":15,"endColumn":14},{"ruleId":"513","severity":1,"message":"590","line":19,"column":10,"nodeType":"515","messageId":"516","endLine":19,"endColumn":18},{"ruleId":"513","severity":1,"message":"591","line":21,"column":26,"nodeType":"515","messageId":"516","endLine":21,"endColumn":36},{"ruleId":"513","severity":1,"message":"592","line":21,"column":38,"nodeType":"515","messageId":"516","endLine":21,"endColumn":51},{"ruleId":"513","severity":1,"message":"572","line":21,"column":53,"nodeType":"515","messageId":"516","endLine":21,"endColumn":66},{"ruleId":"513","severity":1,"message":"593","line":21,"column":68,"nodeType":"515","messageId":"516","endLine":21,"endColumn":76},{"ruleId":"513","severity":1,"message":"594","line":21,"column":78,"nodeType":"515","messageId":"516","endLine":21,"endColumn":89},{"ruleId":"513","severity":1,"message":"595","line":36,"column":8,"nodeType":"515","messageId":"516","endLine":36,"endColumn":15},{"ruleId":"513","severity":1,"message":"596","line":38,"column":8,"nodeType":"515","messageId":"516","endLine":38,"endColumn":18},{"ruleId":"513","severity":1,"message":"597","line":42,"column":11,"nodeType":"515","messageId":"516","endLine":42,"endColumn":18},{"ruleId":"513","severity":1,"message":"598","line":44,"column":12,"nodeType":"515","messageId":"516","endLine":44,"endColumn":23},{"ruleId":"513","severity":1,"message":"599","line":44,"column":25,"nodeType":"515","messageId":"516","endLine":44,"endColumn":41},{"ruleId":"513","severity":1,"message":"600","line":45,"column":12,"nodeType":"515","messageId":"516","endLine":45,"endColumn":24},{"ruleId":"513","severity":1,"message":"601","line":45,"column":26,"nodeType":"515","messageId":"516","endLine":45,"endColumn":41},{"ruleId":"513","severity":1,"message":"602","line":57,"column":12,"nodeType":"515","messageId":"516","endLine":57,"endColumn":17},{"ruleId":"513","severity":1,"message":"566","line":60,"column":12,"nodeType":"515","messageId":"516","endLine":60,"endColumn":21},{"ruleId":"578","severity":1,"message":"579","line":71,"column":56,"nodeType":"580","messageId":"581","endLine":71,"endColumn":58},{"ruleId":"567","severity":1,"message":"603","line":103,"column":8,"nodeType":"569","endLine":103,"endColumn":10,"suggestions":"604"},{"ruleId":"513","severity":1,"message":"520","line":13,"column":5,"nodeType":"515","messageId":"516","endLine":13,"endColumn":9},{"ruleId":"513","severity":1,"message":"521","line":14,"column":5,"nodeType":"515","messageId":"516","endLine":14,"endColumn":8},{"ruleId":"513","severity":1,"message":"518","line":16,"column":5,"nodeType":"515","messageId":"516","endLine":16,"endColumn":9},{"ruleId":"513","severity":1,"message":"605","line":31,"column":21,"nodeType":"515","messageId":"516","endLine":31,"endColumn":33},{"ruleId":"513","severity":1,"message":"606","line":32,"column":17,"nodeType":"515","messageId":"516","endLine":32,"endColumn":25},{"ruleId":"513","severity":1,"message":"520","line":15,"column":5,"nodeType":"515","messageId":"516","endLine":15,"endColumn":9},{"ruleId":"513","severity":1,"message":"607","line":20,"column":5,"nodeType":"515","messageId":"516","endLine":20,"endColumn":19},{"ruleId":"513","severity":1,"message":"608","line":24,"column":5,"nodeType":"515","messageId":"516","endLine":24,"endColumn":8},{"ruleId":"513","severity":1,"message":"521","line":25,"column":5,"nodeType":"515","messageId":"516","endLine":25,"endColumn":8},{"ruleId":"513","severity":1,"message":"518","line":27,"column":5,"nodeType":"515","messageId":"516","endLine":27,"endColumn":9},{"ruleId":"513","severity":1,"message":"558","line":51,"column":40,"nodeType":"515","messageId":"516","endLine":51,"endColumn":55},{"ruleId":"513","severity":1,"message":"606","line":60,"column":17,"nodeType":"515","messageId":"516","endLine":60,"endColumn":25},{"ruleId":"513","severity":1,"message":"609","line":63,"column":18,"nodeType":"515","messageId":"516","endLine":63,"endColumn":27},{"ruleId":"578","severity":1,"message":"579","line":119,"column":16,"nodeType":"580","messageId":"581","endLine":119,"endColumn":18},{"ruleId":"578","severity":1,"message":"585","line":365,"column":123,"nodeType":"580","messageId":"581","endLine":365,"endColumn":125},{"ruleId":"513","severity":1,"message":"610","line":4,"column":28,"nodeType":"515","messageId":"516","endLine":4,"endColumn":36},{"ruleId":"513","severity":1,"message":"611","line":5,"column":8,"nodeType":"515","messageId":"516","endLine":5,"endColumn":17},{"ruleId":"513","severity":1,"message":"612","line":8,"column":8,"nodeType":"515","messageId":"516","endLine":8,"endColumn":17},{"ruleId":"513","severity":1,"message":"517","line":14,"column":5,"nodeType":"515","messageId":"516","endLine":14,"endColumn":21},{"ruleId":"513","severity":1,"message":"540","line":16,"column":5,"nodeType":"515","messageId":"516","endLine":16,"endColumn":11},{"ruleId":"513","severity":1,"message":"520","line":17,"column":5,"nodeType":"515","messageId":"516","endLine":17,"endColumn":9},{"ruleId":"513","severity":1,"message":"574","line":18,"column":5,"nodeType":"515","messageId":"516","endLine":18,"endColumn":9},{"ruleId":"513","severity":1,"message":"613","line":19,"column":5,"nodeType":"515","messageId":"516","endLine":19,"endColumn":9},{"ruleId":"513","severity":1,"message":"614","line":20,"column":5,"nodeType":"515","messageId":"516","endLine":20,"endColumn":13},{"ruleId":"513","severity":1,"message":"607","line":21,"column":5,"nodeType":"515","messageId":"516","endLine":21,"endColumn":19},{"ruleId":"513","severity":1,"message":"615","line":22,"column":5,"nodeType":"515","messageId":"516","endLine":22,"endColumn":11},{"ruleId":"513","severity":1,"message":"616","line":23,"column":5,"nodeType":"515","messageId":"516","endLine":23,"endColumn":17},{"ruleId":"513","severity":1,"message":"617","line":24,"column":5,"nodeType":"515","messageId":"516","endLine":24,"endColumn":12},{"ruleId":"513","severity":1,"message":"608","line":25,"column":5,"nodeType":"515","messageId":"516","endLine":25,"endColumn":8},{"ruleId":"513","severity":1,"message":"521","line":26,"column":5,"nodeType":"515","messageId":"516","endLine":26,"endColumn":8},{"ruleId":"513","severity":1,"message":"589","line":27,"column":5,"nodeType":"515","messageId":"516","endLine":27,"endColumn":14},{"ruleId":"513","severity":1,"message":"518","line":28,"column":5,"nodeType":"515","messageId":"516","endLine":28,"endColumn":9},{"ruleId":"513","severity":1,"message":"618","line":29,"column":5,"nodeType":"515","messageId":"516","endLine":29,"endColumn":13},{"ruleId":"513","severity":1,"message":"619","line":30,"column":5,"nodeType":"515","messageId":"516","endLine":30,"endColumn":15},{"ruleId":"513","severity":1,"message":"620","line":33,"column":8,"nodeType":"515","messageId":"516","endLine":33,"endColumn":19},{"ruleId":"513","severity":1,"message":"621","line":34,"column":8,"nodeType":"515","messageId":"516","endLine":34,"endColumn":20},{"ruleId":"513","severity":1,"message":"622","line":39,"column":8,"nodeType":"515","messageId":"516","endLine":39,"endColumn":13},{"ruleId":"513","severity":1,"message":"623","line":41,"column":8,"nodeType":"515","messageId":"516","endLine":41,"endColumn":14},{"ruleId":"513","severity":1,"message":"624","line":45,"column":8,"nodeType":"515","messageId":"516","endLine":45,"endColumn":17},{"ruleId":"513","severity":1,"message":"625","line":47,"column":10,"nodeType":"515","messageId":"516","endLine":47,"endColumn":22},{"ruleId":"513","severity":1,"message":"626","line":47,"column":24,"nodeType":"515","messageId":"516","endLine":47,"endColumn":38},{"ruleId":"513","severity":1,"message":"558","line":47,"column":40,"nodeType":"515","messageId":"516","endLine":47,"endColumn":55},{"ruleId":"513","severity":1,"message":"627","line":47,"column":57,"nodeType":"515","messageId":"516","endLine":47,"endColumn":78},{"ruleId":"513","severity":1,"message":"517","line":11,"column":5,"nodeType":"515","messageId":"516","endLine":11,"endColumn":21},{"ruleId":"513","severity":1,"message":"520","line":15,"column":5,"nodeType":"515","messageId":"516","endLine":15,"endColumn":9},{"ruleId":"513","severity":1,"message":"521","line":16,"column":5,"nodeType":"515","messageId":"516","endLine":16,"endColumn":8},{"ruleId":"513","severity":1,"message":"518","line":18,"column":5,"nodeType":"515","messageId":"516","endLine":18,"endColumn":9},{"ruleId":"513","severity":1,"message":"628","line":47,"column":9,"nodeType":"515","messageId":"516","endLine":47,"endColumn":17},{"ruleId":"513","severity":1,"message":"597","line":48,"column":9,"nodeType":"515","messageId":"516","endLine":48,"endColumn":16},{"ruleId":"513","severity":1,"message":"566","line":49,"column":10,"nodeType":"515","messageId":"516","endLine":49,"endColumn":19},{"ruleId":"513","severity":1,"message":"629","line":50,"column":10,"nodeType":"515","messageId":"516","endLine":50,"endColumn":15},{"ruleId":"513","severity":1,"message":"606","line":50,"column":17,"nodeType":"515","messageId":"516","endLine":50,"endColumn":25},{"ruleId":"513","severity":1,"message":"630","line":54,"column":10,"nodeType":"515","messageId":"516","endLine":54,"endColumn":15},{"ruleId":"513","severity":1,"message":"631","line":54,"column":17,"nodeType":"515","messageId":"516","endLine":54,"endColumn":30},{"ruleId":"578","severity":1,"message":"579","line":180,"column":72,"nodeType":"580","messageId":"581","endLine":180,"endColumn":74},{"ruleId":"513","severity":1,"message":"519","line":9,"column":5,"nodeType":"515","messageId":"516","endLine":9,"endColumn":9},{"ruleId":"513","severity":1,"message":"517","line":10,"column":5,"nodeType":"515","messageId":"516","endLine":10,"endColumn":21},{"ruleId":"513","severity":1,"message":"520","line":13,"column":5,"nodeType":"515","messageId":"516","endLine":13,"endColumn":9},{"ruleId":"513","severity":1,"message":"521","line":14,"column":5,"nodeType":"515","messageId":"516","endLine":14,"endColumn":8},{"ruleId":"513","severity":1,"message":"518","line":16,"column":5,"nodeType":"515","messageId":"516","endLine":16,"endColumn":9},{"ruleId":"513","severity":1,"message":"628","line":39,"column":9,"nodeType":"515","messageId":"516","endLine":39,"endColumn":17},{"ruleId":"513","severity":1,"message":"566","line":41,"column":10,"nodeType":"515","messageId":"516","endLine":41,"endColumn":19},{"ruleId":"513","severity":1,"message":"629","line":42,"column":10,"nodeType":"515","messageId":"516","endLine":42,"endColumn":15},{"ruleId":"513","severity":1,"message":"606","line":42,"column":17,"nodeType":"515","messageId":"516","endLine":42,"endColumn":25},{"ruleId":"567","severity":1,"message":"603","line":111,"column":8,"nodeType":"569","endLine":111,"endColumn":10,"suggestions":"632"},{"ruleId":"578","severity":1,"message":"579","line":140,"column":68,"nodeType":"580","messageId":"581","endLine":140,"endColumn":70},{"ruleId":"578","severity":1,"message":"579","line":171,"column":15,"nodeType":"580","messageId":"581","endLine":171,"endColumn":17},{"ruleId":"578","severity":1,"message":"579","line":171,"column":36,"nodeType":"580","messageId":"581","endLine":171,"endColumn":38},{"ruleId":"513","severity":1,"message":"517","line":11,"column":5,"nodeType":"515","messageId":"516","endLine":11,"endColumn":21},{"ruleId":"513","severity":1,"message":"617","line":13,"column":5,"nodeType":"515","messageId":"516","endLine":13,"endColumn":12},{"ruleId":"513","severity":1,"message":"520","line":15,"column":5,"nodeType":"515","messageId":"516","endLine":15,"endColumn":9},{"ruleId":"513","severity":1,"message":"521","line":16,"column":5,"nodeType":"515","messageId":"516","endLine":16,"endColumn":8},{"ruleId":"513","severity":1,"message":"589","line":17,"column":5,"nodeType":"515","messageId":"516","endLine":17,"endColumn":14},{"ruleId":"513","severity":1,"message":"518","line":18,"column":5,"nodeType":"515","messageId":"516","endLine":18,"endColumn":9},{"ruleId":"513","severity":1,"message":"633","line":38,"column":10,"nodeType":"515","messageId":"516","endLine":38,"endColumn":21},{"ruleId":"513","severity":1,"message":"628","line":46,"column":9,"nodeType":"515","messageId":"516","endLine":46,"endColumn":17},{"ruleId":"513","severity":1,"message":"597","line":47,"column":9,"nodeType":"515","messageId":"516","endLine":47,"endColumn":16},{"ruleId":"513","severity":1,"message":"566","line":48,"column":10,"nodeType":"515","messageId":"516","endLine":48,"endColumn":19},{"ruleId":"513","severity":1,"message":"629","line":49,"column":10,"nodeType":"515","messageId":"516","endLine":49,"endColumn":15},{"ruleId":"513","severity":1,"message":"606","line":49,"column":17,"nodeType":"515","messageId":"516","endLine":49,"endColumn":25},{"ruleId":"513","severity":1,"message":"630","line":53,"column":10,"nodeType":"515","messageId":"516","endLine":53,"endColumn":15},{"ruleId":"513","severity":1,"message":"631","line":53,"column":17,"nodeType":"515","messageId":"516","endLine":53,"endColumn":30},{"ruleId":"513","severity":1,"message":"634","line":56,"column":14,"nodeType":"515","messageId":"516","endLine":56,"endColumn":23},{"ruleId":"578","severity":1,"message":"579","line":137,"column":72,"nodeType":"580","messageId":"581","endLine":137,"endColumn":74},{"ruleId":"513","severity":1,"message":"532","line":4,"column":8,"nodeType":"515","messageId":"516","endLine":4,"endColumn":20},{"ruleId":"513","severity":1,"message":"533","line":12,"column":8,"nodeType":"515","messageId":"516","endLine":12,"endColumn":12},{"ruleId":"513","severity":1,"message":"635","line":14,"column":10,"nodeType":"515","messageId":"516","endLine":14,"endColumn":19},{"ruleId":"513","severity":1,"message":"534","line":16,"column":7,"nodeType":"515","messageId":"516","endLine":16,"endColumn":20},{"ruleId":"513","severity":1,"message":"636","line":50,"column":9,"nodeType":"515","messageId":"516","endLine":50,"endColumn":13},{"ruleId":"513","severity":1,"message":"538","line":17,"column":8,"nodeType":"515","messageId":"516","endLine":17,"endColumn":14},{"ruleId":"513","severity":1,"message":"637","line":22,"column":24,"nodeType":"515","messageId":"516","endLine":22,"endColumn":36},{"ruleId":"513","severity":1,"message":"638","line":24,"column":10,"nodeType":"515","messageId":"516","endLine":24,"endColumn":14},{"ruleId":"578","severity":1,"message":"579","line":56,"column":50,"nodeType":"580","messageId":"581","endLine":56,"endColumn":52},{"ruleId":"567","severity":1,"message":"603","line":77,"column":8,"nodeType":"569","endLine":77,"endColumn":10,"suggestions":"639"},{"ruleId":"578","severity":1,"message":"579","line":168,"column":51,"nodeType":"580","messageId":"581","endLine":168,"endColumn":53},{"ruleId":"578","severity":1,"message":"579","line":170,"column":51,"nodeType":"580","messageId":"581","endLine":170,"endColumn":53},"no-native-reassign",["640"],"no-negated-in-lhs",["641"],"no-unused-vars","'Notifications' is defined but never used.","Identifier","unusedVar","'CircularProgress' is defined but never used.","'Fade' is defined but never used.","'Grid' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'classnames' is defined but never used.","'logo' is defined but never used.","'google' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'LinearProgress' is defined but never used.","'Select' is defined but never used.","'OutlinedInput' is defined but never used.","'MenuItem' is defined but never used.","'InboxIcon' is defined but never used.","'MUIDataTable' is defined but never used.","'mock' is defined but never used.","'datatableData' is assigned a value but never used.","'ToastContainer' is defined but never used.","'SyntaxHighlighter' is defined but never used.","'docco' is defined but never used.","'Widget' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'handleNotificationCall' is defined but never used.","'changeNotificationPosition' is defined but never used.","'CloseButton' is defined but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'Dot' is defined but never used.","'ClickAwayListener' is defined but never used.","'theme' is assigned a value but never used.","'open' is assigned a value but never used.","'getProductswithquesry' is defined but never used.","'getMainChartData' is defined but never used.","'InputBase' is defined but never used.","'MailIcon' is defined but never used.","'SearchIcon' is defined but never used.","'Notification' is defined but never used.","'FavoriteIcon' is defined but never used.","'setCartQuantity' is defined but never used.","'setIsMailsUnread' is assigned a value but never used.","'notificationsMenu' is assigned a value but never used.","'setNotificationsMenu' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'isSearchOpen' is assigned a value but never used.","'setSearchOpen' is assigned a value but never used.","'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userState.isDrawerOpen'. Either include it or remove the dependency array.","ArrayExpression",["642"],"'makeStyles' is defined but never used.","'deleteProduct' is defined but never used.","'Input' is defined but never used.","'Card' is defined but never used.","'products' is assigned a value but never used.","'setProducts' is assigned a value but never used.","'setintialFiles' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'onProductRemove' is defined but never used.","React Hook useEffect has a missing dependency: 'mockLoading'. Either include it or remove the dependency array.",["643"],"Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TextField' is defined but never used.","'Skeleton' is defined but never used.","'addProduct' is defined but never used.","'updateProduct' is defined but never used.","'addImage' is defined but never used.","'removeImage' is defined but never used.","'AddIcon' is defined but never used.","'RemoveIcon' is defined but never used.","'classes' is assigned a value but never used.","'addedToCart' is assigned a value but never used.","'setIsAddedToCart' is assigned a value but never used.","'isWishListed' is assigned a value but never used.","'setIsWishListed' is assigned a value but never used.","'stock' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["644"],"'setIsLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","'ListItemAvatar' is defined but never used.","'Fab' is defined but never used.","'setStatus' is assigned a value but never used.","'useState' is defined but never used.","'PageTitle' is defined but never used.","'useStyles' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Avatar' is defined but never used.","'ListItemText' is defined but never used.","'Divider' is defined but never used.","'Collapse' is defined but never used.","'IconButton' is defined but never used.","'AvatarGroup' is defined but never used.","'ListItemIcon' is defined but never used.","'Alert' is defined but never used.","'Delete' is defined but never used.","'CloseIcon' is defined but never used.","'getCartItems' is defined but never used.","'removeFromCart' is defined but never used.","'updateCartQunatityApi' is defined but never used.","'dispatch' is assigned a value but never used.","'error' is assigned a value but never used.","'phone' is assigned a value but never used.","'setPhoneValue' is assigned a value but never used.",["645"],"'getMyIssues' is defined but never used.","'addIssueC' is defined but never used.","'getOrders' is defined but never used.","'role' is assigned a value but never used.","'getAllOrders' is defined but never used.","'Done' is defined but never used.",["646"],"no-global-assign","no-unsafe-negation",{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},{"desc":"651","fix":"652"},{"desc":"651","fix":"653"},{"desc":"651","fix":"654"},"Update the dependencies array to be: [userState.isDrawerOpen]",{"range":"655","text":"656"},"Update the dependencies array to be: [mockLoading]",{"range":"657","text":"658"},"Update the dependencies array to be: [id]",{"range":"659","text":"660"},{"range":"661","text":"660"},{"range":"662","text":"660"},[3293,3295],"[userState.isDrawerOpen]",[4878,4880],"[mockLoading]",[3108,3110],"[id]",[3032,3034],[1751,1753]]